INFO  16:59:22,380 - Compiling source file: C:\Users\Nikola\Desktop\pp1 Projekat\projekat\workspace\PP1Project\test\program.mj
INFO  16:59:22,384 - #2 program
INFO  16:59:22,384 - #50 myProgram
INFO  16:59:22,384 - #17 class
INFO  16:59:22,384 - #50 Integer
INFO  16:59:22,384 - #3 {
INFO  16:59:22,384 - #50 int
INFO  16:59:22,385 - #50 myInt
INFO  16:59:22,385 - #12 ;
INFO  16:59:22,385 - #3 {
INFO  16:59:22,385 - #10 void
INFO  16:59:22,385 - #50 setInt
INFO  16:59:22,385 - #5 (
INFO  16:59:22,385 - #50 int
INFO  16:59:22,385 - #50 myInt
INFO  16:59:22,385 - #6 )
INFO  16:59:22,385 - #3 {
INFO  16:59:22,385 - #50 this
INFO  16:59:22,385 - #28 .
INFO  16:59:22,385 - #50 myInt
INFO  16:59:22,385 - #11 =
INFO  16:59:22,385 - #50 myInt
INFO  16:59:22,385 - #12 ;
INFO  16:59:22,385 - #4 }
INFO  16:59:22,385 - #50 int
INFO  16:59:22,386 - #50 getInt
INFO  16:59:22,386 - #5 (
INFO  16:59:22,386 - #6 )
INFO  16:59:22,386 - #3 {
INFO  16:59:22,386 - #16 return
INFO  16:59:22,386 - #50 myInt
INFO  16:59:22,386 - #12 ;
INFO  16:59:22,386 - #4 }
INFO  16:59:22,386 - #4 }
INFO  16:59:22,386 - #4 }
INFO  16:59:22,386 - #17 class
INFO  16:59:22,386 - #50 Table
INFO  16:59:22,386 - #3 {
INFO  16:59:22,386 - #50 int
INFO  16:59:22,386 - #50 pos
INFO  16:59:22,386 - #7 [
INFO  16:59:22,386 - #8 ]
INFO  16:59:22,386 - #27 ,
INFO  16:59:22,387 - #50 neg
INFO  16:59:22,387 - #7 [
INFO  16:59:22,387 - #8 ]
INFO  16:59:22,387 - #12 ;
INFO  16:59:22,387 - #3 {
INFO  16:59:22,387 - #50 int
INFO  16:59:22,387 - #50 putp
INFO  16:59:22,387 - #5 (
INFO  16:59:22,387 - #50 int
INFO  16:59:22,387 - #50 a
INFO  16:59:22,387 - #27 ,
INFO  16:59:22,387 - #50 int
INFO  16:59:22,387 - #50 idx
INFO  16:59:22,387 - #6 )
INFO  16:59:22,387 - #3 {
INFO  16:59:22,387 - #50 this
INFO  16:59:22,387 - #28 .
INFO  16:59:22,387 - #50 pos
INFO  16:59:22,387 - #7 [
INFO  16:59:22,387 - #50 idx
INFO  16:59:22,387 - #8 ]
INFO  16:59:22,388 - #11 =
INFO  16:59:22,388 - #50 a
INFO  16:59:22,388 - #12 ;
INFO  16:59:22,388 - #16 return
INFO  16:59:22,388 - #47 1
INFO  16:59:22,388 - #12 ;
INFO  16:59:22,388 - #4 }
INFO  16:59:22,388 - #50 int
INFO  16:59:22,388 - #50 putn
INFO  16:59:22,388 - #5 (
INFO  16:59:22,388 - #50 int
INFO  16:59:22,388 - #50 a
INFO  16:59:22,388 - #27 ,
INFO  16:59:22,388 - #50 int
INFO  16:59:22,388 - #50 idx
INFO  16:59:22,388 - #6 )
INFO  16:59:22,388 - #3 {
INFO  16:59:22,388 - #50 this
INFO  16:59:22,388 - #28 .
INFO  16:59:22,388 - #50 neg
INFO  16:59:22,388 - #7 [
INFO  16:59:22,388 - #50 idx
INFO  16:59:22,388 - #8 ]
INFO  16:59:22,389 - #11 =
INFO  16:59:22,389 - #50 a
INFO  16:59:22,389 - #12 ;
INFO  16:59:22,389 - #16 return
INFO  16:59:22,389 - #47 1
INFO  16:59:22,389 - #12 ;
INFO  16:59:22,389 - #4 }
INFO  16:59:22,389 - #50 int
INFO  16:59:22,389 - #50 getp
INFO  16:59:22,389 - #5 (
INFO  16:59:22,389 - #50 int
INFO  16:59:22,389 - #50 idx
INFO  16:59:22,389 - #6 )
INFO  16:59:22,389 - #3 {
INFO  16:59:22,389 - #16 return
INFO  16:59:22,389 - #50 pos
INFO  16:59:22,389 - #7 [
INFO  16:59:22,389 - #50 idx
INFO  16:59:22,389 - #8 ]
INFO  16:59:22,389 - #12 ;
INFO  16:59:22,389 - #4 }
INFO  16:59:22,389 - #50 int
INFO  16:59:22,389 - #50 getn
INFO  16:59:22,389 - #5 (
INFO  16:59:22,389 - #50 int
INFO  16:59:22,390 - #50 idx
INFO  16:59:22,390 - #6 )
INFO  16:59:22,390 - #3 {
INFO  16:59:22,390 - #16 return
INFO  16:59:22,390 - #50 neg
INFO  16:59:22,390 - #7 [
INFO  16:59:22,390 - #50 idx
INFO  16:59:22,390 - #8 ]
INFO  16:59:22,390 - #12 ;
INFO  16:59:22,390 - #4 }
INFO  16:59:22,390 - #4 }
INFO  16:59:22,390 - #4 }
INFO  16:59:22,390 - #17 class
INFO  16:59:22,390 - #50 Z
INFO  16:59:22,390 - #23 extends
INFO  16:59:22,391 - #50 Table
INFO  16:59:22,391 - #3 {
INFO  16:59:22,391 - #50 int
INFO  16:59:22,391 - #50 i
INFO  16:59:22,391 - #12 ;
INFO  16:59:22,391 - #50 int
INFO  16:59:22,391 - #50 x
INFO  16:59:22,391 - #7 [
INFO  16:59:22,391 - #8 ]
INFO  16:59:22,391 - #12 ;
INFO  16:59:22,391 - #3 {
INFO  16:59:22,391 - #50 int
INFO  16:59:22,391 - #50 getValue
INFO  16:59:22,391 - #5 (
INFO  16:59:22,391 - #50 int
INFO  16:59:22,391 - #50 a
INFO  16:59:22,391 - #6 )
INFO  16:59:22,391 - #50 int
INFO  16:59:22,391 - #50 b
INFO  16:59:22,391 - #12 ;
INFO  16:59:22,391 - #50 bool
INFO  16:59:22,391 - #50 c
INFO  16:59:22,391 - #12 ;
INFO  16:59:22,392 - #3 {
INFO  16:59:22,392 - #50 x
INFO  16:59:22,392 - #7 [
INFO  16:59:22,392 - #50 i
INFO  16:59:22,392 - #8 ]
INFO  16:59:22,392 - #11 =
INFO  16:59:22,392 - #50 i
INFO  16:59:22,392 - #12 ;
INFO  16:59:22,392 - #16 return
INFO  16:59:22,392 - #50 this
INFO  16:59:22,392 - #28 .
INFO  16:59:22,392 - #50 i
INFO  16:59:22,392 - #36 +
INFO  16:59:22,392 - #50 this
INFO  16:59:22,392 - #28 .
INFO  16:59:22,392 - #50 x
INFO  16:59:22,392 - #7 [
INFO  16:59:22,392 - #47 0
INFO  16:59:22,392 - #8 ]
INFO  16:59:22,392 - #12 ;
INFO  16:59:22,392 - #4 }
INFO  16:59:22,392 - #4 }
INFO  16:59:22,392 - #4 }
INFO  16:59:22,392 - #17 class
INFO  16:59:22,392 - #50 B
INFO  16:59:22,392 - #23 extends
INFO  16:59:22,392 - #50 Table
INFO  16:59:22,392 - #3 {
INFO  16:59:22,392 - #50 int
INFO  16:59:22,393 - #50 i
INFO  16:59:22,393 - #12 ;
INFO  16:59:22,393 - #50 int
INFO  16:59:22,393 - #50 x
INFO  16:59:22,393 - #7 [
INFO  16:59:22,393 - #8 ]
INFO  16:59:22,393 - #12 ;
INFO  16:59:22,393 - #3 {
INFO  16:59:22,393 - #50 int
INFO  16:59:22,393 - #50 getValue
INFO  16:59:22,393 - #5 (
INFO  16:59:22,393 - #50 int
INFO  16:59:22,393 - #50 a
INFO  16:59:22,393 - #6 )
INFO  16:59:22,393 - #50 int
INFO  16:59:22,393 - #50 b
INFO  16:59:22,393 - #12 ;
INFO  16:59:22,393 - #50 bool
INFO  16:59:22,393 - #50 c
INFO  16:59:22,393 - #12 ;
INFO  16:59:22,394 - #3 {
INFO  16:59:22,394 - #14 print
INFO  16:59:22,394 - #5 (
INFO  16:59:22,394 - #50 c
INFO  16:59:22,394 - #28 .
INFO  16:59:22,394 - #50 getValue
INFO  16:59:22,394 - #5 (
INFO  16:59:22,394 - #50 c
INFO  16:59:22,394 - #28 .
INFO  16:59:22,394 - #50 theA
INFO  16:59:22,394 - #28 .
INFO  16:59:22,394 - #50 x
INFO  16:59:22,394 - #7 [
INFO  16:59:22,394 - #47 0
INFO  16:59:22,394 - #8 ]
INFO  16:59:22,395 - #6 )
INFO  16:59:22,395 - #6 )
INFO  16:59:22,395 - #12 ;
INFO  16:59:22,395 - #16 return
INFO  16:59:22,395 - #50 this
INFO  16:59:22,395 - #28 .
INFO  16:59:22,395 - #50 i
INFO  16:59:22,395 - #36 +
INFO  16:59:22,395 - #50 this
INFO  16:59:22,395 - #28 .
INFO  16:59:22,395 - #50 x
INFO  16:59:22,395 - #7 [
INFO  16:59:22,395 - #47 0
INFO  16:59:22,395 - #8 ]
INFO  16:59:22,395 - #36 +
INFO  16:59:22,395 - #50 a
INFO  16:59:22,395 - #12 ;
INFO  16:59:22,395 - #4 }
INFO  16:59:22,395 - #10 void
INFO  16:59:22,395 - #50 getTable
INFO  16:59:22,395 - #5 (
INFO  16:59:22,395 - #6 )
INFO  16:59:22,395 - #50 int
INFO  16:59:22,395 - #50 a
INFO  16:59:22,395 - #12 ;
INFO  16:59:22,395 - #3 {
INFO  16:59:22,395 - #16 return
INFO  16:59:22,395 - #47 1
INFO  16:59:22,395 - #12 ;
INFO  16:59:22,395 - #4 }
INFO  16:59:22,396 - #4 }
INFO  16:59:22,396 - #4 }
INFO  16:59:22,396 - #17 class
INFO  16:59:22,396 - #50 Beta
INFO  16:59:22,396 - #3 {
INFO  16:59:22,396 - #50 int
INFO  16:59:22,396 - #50 a
INFO  16:59:22,396 - #27 ,
INFO  16:59:22,396 - #50 b
INFO  16:59:22,396 - #27 ,
INFO  16:59:22,396 - #50 c
INFO  16:59:22,396 - #27 ,
INFO  16:59:22,396 - #50 d
INFO  16:59:22,396 - #12 ;
INFO  16:59:22,396 - #50 Table
INFO  16:59:22,396 - #50 t
INFO  16:59:22,396 - #12 ;
INFO  16:59:22,396 - #3 {
INFO  16:59:22,396 - #50 int
INFO  16:59:22,396 - #50 getVal
INFO  16:59:22,396 - #5 (
INFO  16:59:22,396 - #6 )
INFO  16:59:22,396 - #3 {
INFO  16:59:22,396 - #16 return
INFO  16:59:22,396 - #12 ;
INFO  16:59:22,396 - #4 }
INFO  16:59:22,397 - #50 int
INFO  16:59:22,397 - #50 aaa
INFO  16:59:22,397 - #5 (
INFO  16:59:22,397 - #50 int
INFO  16:59:22,397 - #50 a
INFO  16:59:22,397 - #6 )
INFO  16:59:22,397 - #3 {
INFO  16:59:22,397 - #16 return
INFO  16:59:22,397 - #12 ;
INFO  16:59:22,397 - #4 }
INFO  16:59:22,397 - #4 }
INFO  16:59:22,397 - #4 }
INFO  16:59:22,397 - #18 const
INFO  16:59:22,397 - #50 int
INFO  16:59:22,397 - #50 a
INFO  16:59:22,397 - #11 =
INFO  16:59:22,397 - #47 23
INFO  16:59:22,397 - #27 ,
INFO  16:59:22,397 - #50 b
INFO  16:59:22,397 - #11 =
INFO  16:59:22,397 - #47 32
INFO  16:59:22,397 - #27 ,
INFO  16:59:22,397 - #50 c
INFO  16:59:22,397 - #11 =
INFO  16:59:22,397 - #48 a
INFO  16:59:22,397 - #12 ;
INFO  16:59:22,397 - #18 const
INFO  16:59:22,397 - #50 bool
INFO  16:59:22,397 - #50 p
INFO  16:59:22,397 - #11 =
INFO  16:59:22,398 - #50 true
INFO  16:59:22,398 - #27 ,
INFO  16:59:22,398 - #50 z
INFO  16:59:22,398 - #11 =
INFO  16:59:22,398 - #50 false
INFO  16:59:22,398 - #27 ,
INFO  16:59:22,398 - #50 g
INFO  16:59:22,398 - #11 =
INFO  16:59:22,398 - #48 a
INFO  16:59:22,398 - #12 ;
INFO  16:59:22,398 - #50 int
INFO  16:59:22,398 - #50 asdv
INFO  16:59:22,398 - #7 [
INFO  16:59:22,398 - #8 ]
INFO  16:59:22,398 - #12 ;
INFO  16:59:22,398 - #50 Table
INFO  16:59:22,398 - #50 aa
INFO  16:59:22,398 - #27 ,
INFO  16:59:22,398 - #50 opa
INFO  16:59:22,398 - #12 ;
INFO  16:59:22,398 - #18 const
INFO  16:59:22,398 - #50 int
INFO  16:59:22,398 - #50 size
INFO  16:59:22,398 - #11 =
INFO  16:59:22,398 - #47 10
INFO  16:59:22,398 - #12 ;
INFO  16:59:22,398 - #50 Table
INFO  16:59:22,398 - #50 val
INFO  16:59:22,398 - #12 ;
INFO  16:59:22,398 - #3 {
INFO  16:59:22,398 - #10 void
INFO  16:59:22,398 - #50 main
INFO  16:59:22,399 - #5 (
INFO  16:59:22,399 - #6 )
INFO  16:59:22,399 - #50 int
INFO  16:59:22,399 - #50 x
INFO  16:59:22,399 - #27 ,
INFO  16:59:22,399 - #50 s
INFO  16:59:22,399 - #12 ;
INFO  16:59:22,399 - #50 int
INFO  16:59:22,399 - #50 i
INFO  16:59:22,399 - #12 ;
INFO  16:59:22,399 - #3 {
INFO  16:59:22,399 - #50 x
INFO  16:59:22,399 - #19 ++
INFO  16:59:22,399 - #12 ;
INFO  16:59:22,399 - #21 if
INFO  16:59:22,399 - #5 (
INFO  16:59:22,399 - #50 i
INFO  16:59:22,399 - #33 <
INFO  16:59:22,399 - #47 2
INFO  16:59:22,399 - #25 &&
INFO  16:59:22,399 - #50 z
INFO  16:59:22,399 - #30 ==
INFO  16:59:22,399 - #47 0
INFO  16:59:22,399 - #6 )
INFO  16:59:22,399 - #3 {
INFO  16:59:22,399 - #50 a
INFO  16:59:22,399 - #11 =
INFO  16:59:22,399 - #13 new
INFO  16:59:22,399 - #50 Beta
INFO  16:59:22,399 - #12 ;
INFO  16:59:22,399 - #50 a
INFO  16:59:22,399 - #28 .
INFO  16:59:22,399 - #50 x
INFO  16:59:22,399 - #11 =
INFO  16:59:22,399 - #13 new
INFO  16:59:22,400 - #50 int
INFO  16:59:22,400 - #7 [
INFO  16:59:22,400 - #47 5
INFO  16:59:22,400 - #8 ]
INFO  16:59:22,400 - #12 ;
INFO  16:59:22,400 - #50 a
INFO  16:59:22,400 - #28 .
INFO  16:59:22,400 - #50 y
INFO  16:59:22,400 - #11 =
INFO  16:59:22,400 - #13 new
INFO  16:59:22,400 - #50 int
INFO  16:59:22,400 - #7 [
INFO  16:59:22,400 - #47 5
INFO  16:59:22,400 - #8 ]
INFO  16:59:22,400 - #12 ;
INFO  16:59:22,400 - #50 c
INFO  16:59:22,400 - #11 =
INFO  16:59:22,400 - #13 new
INFO  16:59:22,400 - #50 B
INFO  16:59:22,400 - #12 ;
INFO  16:59:22,400 - #50 c
INFO  16:59:22,400 - #28 .
INFO  16:59:22,400 - #50 theA
INFO  16:59:22,400 - #11 =
INFO  16:59:22,400 - #50 a
INFO  16:59:22,400 - #12 ;
INFO  16:59:22,400 - #50 c
INFO  16:59:22,400 - #28 .
INFO  16:59:22,400 - #50 x
INFO  16:59:22,400 - #11 =
INFO  16:59:22,400 - #13 new
INFO  16:59:22,400 - #50 int
INFO  16:59:22,400 - #7 [
INFO  16:59:22,401 - #47 5
INFO  16:59:22,401 - #8 ]
INFO  16:59:22,401 - #12 ;
INFO  16:59:22,401 - #50 x
INFO  16:59:22,401 - #11 =
INFO  16:59:22,401 - #13 new
INFO  16:59:22,401 - #50 int
INFO  16:59:22,401 - #7 [
INFO  16:59:22,401 - #47 3
INFO  16:59:22,401 - #8 ]
INFO  16:59:22,401 - #12 ;
INFO  16:59:22,401 - #50 i
INFO  16:59:22,401 - #11 =
INFO  16:59:22,401 - #47 0
INFO  16:59:22,401 - #12 ;
INFO  16:59:22,401 - #15 read
INFO  16:59:22,401 - #5 (
INFO  16:59:22,401 - #50 c
INFO  16:59:22,401 - #28 .
INFO  16:59:22,401 - #50 i
INFO  16:59:22,401 - #6 )
INFO  16:59:22,401 - #12 ;
INFO  16:59:22,401 - #22 for
INFO  16:59:22,401 - #5 (
INFO  16:59:22,401 - #12 ;
INFO  16:59:22,401 - #50 i
INFO  16:59:22,402 - #33 <
INFO  16:59:22,402 - #47 5
INFO  16:59:22,402 - #12 ;
INFO  16:59:22,402 - #50 i
INFO  16:59:22,402 - #19 ++
INFO  16:59:22,402 - #6 )
INFO  16:59:22,402 - #3 {
INFO  16:59:22,402 - #15 read
INFO  16:59:22,402 - #5 (
INFO  16:59:22,402 - #50 c
INFO  16:59:22,402 - #28 .
INFO  16:59:22,402 - #50 x
INFO  16:59:22,402 - #7 [
INFO  16:59:22,402 - #50 i
INFO  16:59:22,402 - #8 ]
INFO  16:59:22,402 - #6 )
INFO  16:59:22,402 - #12 ;
INFO  16:59:22,402 - #15 read
INFO  16:59:22,402 - #5 (
INFO  16:59:22,402 - #50 c
INFO  16:59:22,402 - #28 .
INFO  16:59:22,402 - #50 theA
INFO  16:59:22,402 - #28 .
INFO  16:59:22,402 - #50 x
INFO  16:59:22,402 - #7 [
INFO  16:59:22,403 - #50 i
INFO  16:59:22,403 - #8 ]
INFO  16:59:22,403 - #6 )
INFO  16:59:22,403 - #12 ;
INFO  16:59:22,403 - #4 }
INFO  16:59:22,403 - #14 print
INFO  16:59:22,403 - #5 (
INFO  16:59:22,403 - #50 c
INFO  16:59:22,403 - #28 .
INFO  16:59:22,403 - #50 getValue
INFO  16:59:22,403 - #5 (
INFO  16:59:22,403 - #50 c
INFO  16:59:22,403 - #28 .
INFO  16:59:22,403 - #50 theA
INFO  16:59:22,403 - #28 .
INFO  16:59:22,403 - #50 x
INFO  16:59:22,403 - #7 [
INFO  16:59:22,403 - #47 0
INFO  16:59:22,403 - #8 ]
INFO  16:59:22,404 - #6 )
INFO  16:59:22,404 - #6 )
INFO  16:59:22,404 - #12 ;
INFO  16:59:22,404 - #50 z
INFO  16:59:22,404 - #19 ++
INFO  16:59:22,404 - #12 ;
INFO  16:59:22,404 - #50 z
INFO  16:59:22,404 - #11 =
INFO  16:59:22,404 - #50 z
INFO  16:59:22,404 - #36 +
INFO  16:59:22,404 - #5 (
INFO  16:59:22,404 - #50 i
INFO  16:59:22,404 - #36 +
INFO  16:59:22,404 - #47 2
INFO  16:59:22,404 - #6 )
INFO  16:59:22,404 - #12 ;
INFO  16:59:22,404 - #16 return
INFO  16:59:22,404 - #12 ;
INFO  16:59:22,404 - #4 }
INFO  16:59:22,405 - #46 else
INFO  16:59:22,405 - #3 {
INFO  16:59:22,405 - #21 if
INFO  16:59:22,405 - #5 (
INFO  16:59:22,405 - #50 c
INFO  16:59:22,405 - #32 >
INFO  16:59:22,405 - #47 3
INFO  16:59:22,405 - #6 )
INFO  16:59:22,405 - #29 break
INFO  16:59:22,405 - #12 ;
INFO  16:59:22,405 - #46 else
INFO  16:59:22,405 - #21 if
INFO  16:59:22,405 - #5 (
INFO  16:59:22,405 - #50 c
INFO  16:59:22,405 - #34 >=
INFO  16:59:22,405 - #47 2
INFO  16:59:22,405 - #6 )
INFO  16:59:22,405 - #16 return
INFO  16:59:22,405 - #12 ;
INFO  16:59:22,405 - #46 else
INFO  16:59:22,405 - #24 continue
INFO  16:59:22,405 - #12 ;
INFO  16:59:22,406 - #4 }
INFO  16:59:22,406 - #22 for
INFO  16:59:22,406 - #5 (
INFO  16:59:22,406 - #50 i
INFO  16:59:22,406 - #11 =
INFO  16:59:22,406 - #47 0
INFO  16:59:22,406 - #12 ;
INFO  16:59:22,406 - #50 i
INFO  16:59:22,406 - #33 <
INFO  16:59:22,406 - #47 5
INFO  16:59:22,406 - #12 ;
INFO  16:59:22,406 - #50 i
INFO  16:59:22,406 - #19 ++
INFO  16:59:22,406 - #6 )
INFO  16:59:22,406 - #3 {
INFO  16:59:22,406 - #24 continue
INFO  16:59:22,406 - #12 ;
INFO  16:59:22,406 - #4 }
INFO  16:59:22,406 - #4 }
INFO  16:59:22,406 - #50 int
INFO  16:59:22,406 - #50 main2
INFO  16:59:22,406 - #5 (
INFO  16:59:22,406 - #6 )
INFO  16:59:22,406 - #50 int
INFO  16:59:22,406 - #50 x
INFO  16:59:22,406 - #27 ,
INFO  16:59:22,406 - #50 i
INFO  16:59:22,406 - #12 ;
INFO  16:59:22,407 - #3 {
INFO  16:59:22,407 - #50 val
INFO  16:59:22,407 - #11 =
INFO  16:59:22,407 - #13 new
INFO  16:59:22,407 - #50 Table
INFO  16:59:22,407 - #12 ;
INFO  16:59:22,407 - #50 val
INFO  16:59:22,407 - #28 .
INFO  16:59:22,407 - #50 pos
INFO  16:59:22,407 - #11 =
INFO  16:59:22,407 - #13 new
INFO  16:59:22,407 - #50 int
INFO  16:59:22,407 - #7 [
INFO  16:59:22,407 - #50 size
INFO  16:59:22,407 - #8 ]
INFO  16:59:22,407 - #12 ;
INFO  16:59:22,407 - #50 val
INFO  16:59:22,407 - #28 .
INFO  16:59:22,407 - #50 neg
INFO  16:59:22,407 - #11 =
INFO  16:59:22,407 - #13 new
INFO  16:59:22,407 - #50 int
INFO  16:59:22,407 - #7 [
INFO  16:59:22,407 - #50 size
INFO  16:59:22,407 - #8 ]
INFO  16:59:22,407 - #12 ;
INFO  16:59:22,407 - #22 for
INFO  16:59:22,407 - #5 (
INFO  16:59:22,407 - #50 i
INFO  16:59:22,407 - #11 =
INFO  16:59:22,407 - #47 0
INFO  16:59:22,408 - #12 ;
INFO  16:59:22,408 - #50 i
INFO  16:59:22,408 - #33 <
INFO  16:59:22,408 - #50 size
INFO  16:59:22,408 - #12 ;
INFO  16:59:22,408 - #50 i
INFO  16:59:22,408 - #19 ++
INFO  16:59:22,408 - #6 )
INFO  16:59:22,408 - #3 {
INFO  16:59:22,408 - #50 val
INFO  16:59:22,408 - #28 .
INFO  16:59:22,408 - #50 putp
INFO  16:59:22,408 - #5 (
INFO  16:59:22,408 - #47 0
INFO  16:59:22,408 - #27 ,
INFO  16:59:22,408 - #50 i
INFO  16:59:22,408 - #6 )
INFO  16:59:22,408 - #12 ;
INFO  16:59:22,408 - #50 val
INFO  16:59:22,408 - #28 .
INFO  16:59:22,408 - #50 putn
INFO  16:59:22,408 - #5 (
INFO  16:59:22,408 - #47 0
INFO  16:59:22,408 - #27 ,
INFO  16:59:22,408 - #50 i
INFO  16:59:22,408 - #6 )
INFO  16:59:22,408 - #12 ;
INFO  16:59:22,408 - #4 }
INFO  16:59:22,408 - #15 read
INFO  16:59:22,408 - #5 (
INFO  16:59:22,408 - #50 x
INFO  16:59:22,409 - #6 )
INFO  16:59:22,409 - #12 ;
INFO  16:59:22,409 - #22 for
INFO  16:59:22,409 - #5 (
INFO  16:59:22,409 - #12 ;
INFO  16:59:22,409 - #50 x
INFO  16:59:22,409 - #32 >
INFO  16:59:22,409 - #47 0
INFO  16:59:22,409 - #12 ;
INFO  16:59:22,409 - #6 )
INFO  16:59:22,409 - #3 {
INFO  16:59:22,409 - #21 if
INFO  16:59:22,409 - #5 (
INFO  16:59:22,409 - #47 0
INFO  16:59:22,409 - #35 <=
INFO  16:59:22,409 - #50 x
INFO  16:59:22,409 - #25 &&
INFO  16:59:22,409 - #50 x
INFO  16:59:22,409 - #33 <
INFO  16:59:22,409 - #50 size
INFO  16:59:22,409 - #6 )
INFO  16:59:22,409 - #3 {
INFO  16:59:22,409 - #50 val
INFO  16:59:22,409 - #28 .
INFO  16:59:22,409 - #50 putp
INFO  16:59:22,409 - #5 (
INFO  16:59:22,409 - #50 val
INFO  16:59:22,409 - #28 .
INFO  16:59:22,409 - #50 getp
INFO  16:59:22,409 - #5 (
INFO  16:59:22,409 - #50 x
INFO  16:59:22,410 - #6 )
INFO  16:59:22,410 - #36 +
INFO  16:59:22,410 - #47 1
INFO  16:59:22,410 - #6 )
INFO  16:59:22,410 - #12 ;
INFO  16:59:22,410 - #4 }
INFO  16:59:22,410 - #46 else
INFO  16:59:22,410 - #21 if
INFO  16:59:22,410 - #5 (
INFO  16:59:22,410 - #37 -
INFO  16:59:22,410 - #50 size
INFO  16:59:22,410 - #33 <
INFO  16:59:22,410 - #50 x
INFO  16:59:22,410 - #25 &&
INFO  16:59:22,410 - #50 x
INFO  16:59:22,410 - #33 <
INFO  16:59:22,410 - #47 0
INFO  16:59:22,410 - #6 )
INFO  16:59:22,410 - #3 {
INFO  16:59:22,410 - #50 val
INFO  16:59:22,410 - #28 .
INFO  16:59:22,410 - #50 putn
INFO  16:59:22,410 - #5 (
INFO  16:59:22,410 - #50 val
INFO  16:59:22,410 - #28 .
INFO  16:59:22,410 - #50 getn
INFO  16:59:22,410 - #5 (
INFO  16:59:22,411 - #37 -
INFO  16:59:22,411 - #50 x
INFO  16:59:22,411 - #6 )
INFO  16:59:22,411 - #36 +
INFO  16:59:22,411 - #47 1
INFO  16:59:22,411 - #6 )
INFO  16:59:22,411 - #12 ;
INFO  16:59:22,411 - #4 }
INFO  16:59:22,411 - #15 read
INFO  16:59:22,411 - #5 (
INFO  16:59:22,411 - #50 x
INFO  16:59:22,411 - #6 )
INFO  16:59:22,411 - #12 ;
INFO  16:59:22,411 - #4 }
INFO  16:59:22,411 - #16 return
INFO  16:59:22,411 - #12 ;
INFO  16:59:22,411 - #4 }
INFO  16:59:22,411 - #4 }
