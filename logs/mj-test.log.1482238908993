INFO  23:08:31,829 - Compiling source file: C:\Users\Nikola\Desktop\pp1 Projekat\projekat\workspace\PP1Project\test\program.mj
INFO  23:08:31,835 - #2 program
INFO  23:08:31,835 - #50 myProgram
INFO  23:08:31,835 - #17 class
INFO  23:08:31,835 - #50 Integer
INFO  23:08:31,835 - #3 {
INFO  23:08:31,835 - #50 int
INFO  23:08:31,836 - #50 myInt
INFO  23:08:31,836 - #12 ;
INFO  23:08:31,836 - #3 {
INFO  23:08:31,836 - #10 void
INFO  23:08:31,836 - #50 setInt
INFO  23:08:31,836 - #5 (
INFO  23:08:31,836 - #50 int
INFO  23:08:31,836 - #50 myInt
INFO  23:08:31,836 - #6 )
INFO  23:08:31,836 - #3 {
INFO  23:08:31,836 - #4 }
INFO  23:08:31,836 - #50 int
INFO  23:08:31,836 - #50 getInt
INFO  23:08:31,836 - #5 (
INFO  23:08:31,836 - #6 )
INFO  23:08:31,836 - #3 {
INFO  23:08:31,837 - #16 return
INFO  23:08:31,837 - #50 myInt
INFO  23:08:31,837 - #12 ;
INFO  23:08:31,837 - #4 }
INFO  23:08:31,837 - #4 }
INFO  23:08:31,837 - #4 }
INFO  23:08:31,837 - #17 class
INFO  23:08:31,837 - #50 Table
INFO  23:08:31,837 - #3 {
INFO  23:08:31,837 - #50 int
INFO  23:08:31,837 - #50 pos
INFO  23:08:31,837 - #7 [
INFO  23:08:31,837 - #8 ]
INFO  23:08:31,837 - #27 ,
INFO  23:08:31,837 - #50 neg
INFO  23:08:31,837 - #7 [
INFO  23:08:31,837 - #8 ]
INFO  23:08:31,837 - #12 ;
INFO  23:08:31,837 - #3 {
INFO  23:08:31,838 - #50 int
INFO  23:08:31,838 - #50 putp
INFO  23:08:31,838 - #5 (
INFO  23:08:31,838 - #50 int
INFO  23:08:31,838 - #50 a
INFO  23:08:31,838 - #27 ,
INFO  23:08:31,838 - #50 int
INFO  23:08:31,838 - #50 idx
INFO  23:08:31,838 - #6 )
INFO  23:08:31,838 - #3 {
INFO  23:08:31,838 - #50 this
INFO  23:08:31,838 - #28 .
INFO  23:08:31,838 - #50 pos
INFO  23:08:31,838 - #7 [
INFO  23:08:31,838 - #50 idx
INFO  23:08:31,838 - #8 ]
INFO  23:08:31,838 - #11 =
INFO  23:08:31,838 - #50 a
INFO  23:08:31,838 - #12 ;
INFO  23:08:31,838 - #16 return
INFO  23:08:31,839 - #47 1
INFO  23:08:31,839 - #12 ;
INFO  23:08:31,839 - #4 }
INFO  23:08:31,839 - #50 int
INFO  23:08:31,839 - #50 putn
INFO  23:08:31,839 - #5 (
INFO  23:08:31,839 - #50 int
INFO  23:08:31,839 - #50 a
INFO  23:08:31,839 - #27 ,
INFO  23:08:31,839 - #50 int
INFO  23:08:31,839 - #50 idx
INFO  23:08:31,839 - #6 )
INFO  23:08:31,839 - #3 {
INFO  23:08:31,839 - #50 this
INFO  23:08:31,839 - #28 .
INFO  23:08:31,839 - #50 neg
INFO  23:08:31,839 - #7 [
INFO  23:08:31,839 - #50 idx
INFO  23:08:31,839 - #8 ]
INFO  23:08:31,840 - #11 =
INFO  23:08:31,840 - #50 a
INFO  23:08:31,840 - #12 ;
INFO  23:08:31,840 - #16 return
INFO  23:08:31,840 - #47 1
INFO  23:08:31,840 - #12 ;
INFO  23:08:31,840 - #4 }
INFO  23:08:31,840 - #50 int
INFO  23:08:31,840 - #50 getp
INFO  23:08:31,840 - #5 (
INFO  23:08:31,840 - #50 int
INFO  23:08:31,840 - #50 idx
INFO  23:08:31,840 - #6 )
INFO  23:08:31,840 - #3 {
INFO  23:08:31,840 - #16 return
INFO  23:08:31,840 - #50 pos
INFO  23:08:31,840 - #7 [
INFO  23:08:31,840 - #50 idx
INFO  23:08:31,840 - #8 ]
INFO  23:08:31,841 - #12 ;
INFO  23:08:31,841 - #4 }
INFO  23:08:31,841 - #50 int
INFO  23:08:31,841 - #50 getn
INFO  23:08:31,841 - #5 (
INFO  23:08:31,841 - #50 int
INFO  23:08:31,841 - #50 idx
INFO  23:08:31,841 - #6 )
INFO  23:08:31,841 - #3 {
INFO  23:08:31,841 - #16 return
INFO  23:08:31,841 - #50 neg
INFO  23:08:31,841 - #7 [
INFO  23:08:31,841 - #50 idx
INFO  23:08:31,841 - #8 ]
INFO  23:08:31,841 - #12 ;
INFO  23:08:31,841 - #4 }
INFO  23:08:31,841 - #4 }
INFO  23:08:31,841 - #4 }
INFO  23:08:31,841 - #17 class
INFO  23:08:31,841 - #50 Z
INFO  23:08:31,841 - #23 extends
INFO  23:08:31,842 - #50 Table
INFO  23:08:31,842 - #3 {
INFO  23:08:31,842 - #50 int
INFO  23:08:31,842 - #50 i
INFO  23:08:31,842 - #12 ;
INFO  23:08:31,842 - #50 int
INFO  23:08:31,842 - #50 x
INFO  23:08:31,842 - #7 [
INFO  23:08:31,842 - #8 ]
INFO  23:08:31,842 - #12 ;
INFO  23:08:31,842 - #3 {
INFO  23:08:31,842 - #50 int
INFO  23:08:31,842 - #50 getValue
INFO  23:08:31,842 - #5 (
INFO  23:08:31,842 - #50 int
INFO  23:08:31,842 - #50 a
INFO  23:08:31,842 - #6 )
INFO  23:08:31,842 - #50 int
INFO  23:08:31,842 - #50 b
INFO  23:08:31,842 - #12 ;
INFO  23:08:31,842 - #50 bool
INFO  23:08:31,843 - #50 c
INFO  23:08:31,843 - #12 ;
INFO  23:08:31,843 - #3 {
INFO  23:08:31,843 - #50 x
INFO  23:08:31,843 - #7 [
INFO  23:08:31,843 - #50 i
INFO  23:08:31,843 - #8 ]
INFO  23:08:31,843 - #11 =
INFO  23:08:31,843 - #50 i
INFO  23:08:31,843 - #12 ;
INFO  23:08:31,844 - #16 return
INFO  23:08:31,844 - #50 this
INFO  23:08:31,844 - #28 .
INFO  23:08:31,844 - #50 i
INFO  23:08:31,844 - #36 +
INFO  23:08:31,844 - #50 this
INFO  23:08:31,845 - #28 .
INFO  23:08:31,845 - #50 x
INFO  23:08:31,845 - #7 [
INFO  23:08:31,845 - #47 0
INFO  23:08:31,845 - #8 ]
INFO  23:08:31,845 - #12 ;
INFO  23:08:31,845 - #4 }
INFO  23:08:31,845 - #4 }
INFO  23:08:31,845 - #4 }
INFO  23:08:31,845 - #17 class
INFO  23:08:31,845 - #50 B
INFO  23:08:31,845 - #23 extends
INFO  23:08:31,845 - #50 Table
INFO  23:08:31,845 - #3 {
INFO  23:08:31,845 - #50 int
INFO  23:08:31,845 - #50 i
INFO  23:08:31,846 - #12 ;
INFO  23:08:31,846 - #50 int
INFO  23:08:31,846 - #50 x
INFO  23:08:31,846 - #7 [
INFO  23:08:31,846 - #8 ]
INFO  23:08:31,846 - #12 ;
INFO  23:08:31,846 - #3 {
INFO  23:08:31,846 - #50 int
INFO  23:08:31,846 - #50 getValue
INFO  23:08:31,846 - #5 (
INFO  23:08:31,846 - #50 int
INFO  23:08:31,846 - #50 a
INFO  23:08:31,846 - #6 )
INFO  23:08:31,846 - #50 int
INFO  23:08:31,846 - #50 b
INFO  23:08:31,846 - #12 ;
INFO  23:08:31,847 - #50 bool
INFO  23:08:31,847 - #50 c
INFO  23:08:31,847 - #12 ;
INFO  23:08:31,847 - #3 {
INFO  23:08:31,847 - #14 print
INFO  23:08:31,847 - #5 (
INFO  23:08:31,847 - #50 c
INFO  23:08:31,847 - #28 .
INFO  23:08:31,847 - #50 getValue
INFO  23:08:31,848 - #5 (
INFO  23:08:31,848 - #50 c
INFO  23:08:31,848 - #28 .
INFO  23:08:31,848 - #50 theA
INFO  23:08:31,848 - #28 .
INFO  23:08:31,848 - #50 x
INFO  23:08:31,848 - #7 [
INFO  23:08:31,848 - #47 0
INFO  23:08:31,848 - #8 ]
INFO  23:08:31,848 - #6 )
INFO  23:08:31,848 - #6 )
INFO  23:08:31,849 - #12 ;
INFO  23:08:31,849 - #16 return
INFO  23:08:31,849 - #50 this
INFO  23:08:31,849 - #28 .
INFO  23:08:31,849 - #50 i
INFO  23:08:31,849 - #36 +
INFO  23:08:31,849 - #50 this
INFO  23:08:31,849 - #28 .
INFO  23:08:31,849 - #50 x
INFO  23:08:31,849 - #7 [
INFO  23:08:31,849 - #47 0
INFO  23:08:31,849 - #8 ]
INFO  23:08:31,849 - #36 +
INFO  23:08:31,849 - #50 a
INFO  23:08:31,849 - #12 ;
INFO  23:08:31,849 - #4 }
INFO  23:08:31,849 - #10 void
INFO  23:08:31,849 - #50 getTable
INFO  23:08:31,849 - #5 (
INFO  23:08:31,849 - #6 )
INFO  23:08:31,849 - #50 int
INFO  23:08:31,849 - #50 a
INFO  23:08:31,850 - #12 ;
INFO  23:08:31,850 - #3 {
INFO  23:08:31,850 - #16 return
INFO  23:08:31,850 - #47 1
INFO  23:08:31,850 - #12 ;
INFO  23:08:31,850 - #4 }
INFO  23:08:31,850 - #4 }
INFO  23:08:31,850 - #4 }
INFO  23:08:31,850 - #17 class
INFO  23:08:31,850 - #50 Beta
INFO  23:08:31,850 - #3 {
INFO  23:08:31,850 - #50 int
INFO  23:08:31,850 - #50 a
INFO  23:08:31,850 - #27 ,
INFO  23:08:31,850 - #50 b
INFO  23:08:31,850 - #27 ,
INFO  23:08:31,850 - #50 c
INFO  23:08:31,850 - #27 ,
INFO  23:08:31,850 - #50 d
INFO  23:08:31,850 - #12 ;
INFO  23:08:31,850 - #50 Table
INFO  23:08:31,850 - #50 t
INFO  23:08:31,851 - #12 ;
INFO  23:08:31,851 - #3 {
INFO  23:08:31,851 - #50 int
INFO  23:08:31,851 - #50 getVal
INFO  23:08:31,851 - #5 (
INFO  23:08:31,851 - #6 )
INFO  23:08:31,851 - #3 {
INFO  23:08:31,851 - #16 return
INFO  23:08:31,851 - #12 ;
INFO  23:08:31,851 - #4 }
INFO  23:08:31,851 - #50 int
INFO  23:08:31,851 - #50 aaa
INFO  23:08:31,851 - #5 (
INFO  23:08:31,851 - #50 int
INFO  23:08:31,851 - #50 a
INFO  23:08:31,852 - #6 )
INFO  23:08:31,852 - #3 {
INFO  23:08:31,852 - #16 return
INFO  23:08:31,852 - #12 ;
INFO  23:08:31,852 - #4 }
INFO  23:08:31,852 - #4 }
INFO  23:08:31,852 - #4 }
INFO  23:08:31,852 - #18 const
INFO  23:08:31,852 - #50 int
INFO  23:08:31,852 - #50 a
INFO  23:08:31,852 - #11 =
INFO  23:08:31,852 - #47 23
INFO  23:08:31,852 - #27 ,
INFO  23:08:31,852 - #50 b
INFO  23:08:31,852 - #11 =
INFO  23:08:31,852 - #47 32
INFO  23:08:31,852 - #27 ,
INFO  23:08:31,852 - #50 c
INFO  23:08:31,852 - #11 =
INFO  23:08:31,852 - #48 a
INFO  23:08:31,852 - #12 ;
INFO  23:08:31,852 - #18 const
INFO  23:08:31,852 - #50 bool
INFO  23:08:31,852 - #50 p
INFO  23:08:31,852 - #11 =
INFO  23:08:31,853 - #49 true
INFO  23:08:31,853 - #27 ,
INFO  23:08:31,853 - #50 z
INFO  23:08:31,853 - #11 =
INFO  23:08:31,853 - #49 false
INFO  23:08:31,853 - #27 ,
INFO  23:08:31,853 - #50 g
INFO  23:08:31,853 - #11 =
INFO  23:08:31,853 - #48 a
INFO  23:08:31,853 - #12 ;
INFO  23:08:31,853 - #50 int
INFO  23:08:31,853 - #50 asdv
INFO  23:08:31,853 - #7 [
INFO  23:08:31,853 - #8 ]
INFO  23:08:31,853 - #12 ;
INFO  23:08:31,853 - #50 Table
INFO  23:08:31,853 - #50 aa
INFO  23:08:31,853 - #27 ,
INFO  23:08:31,853 - #50 opa
INFO  23:08:31,853 - #12 ;
INFO  23:08:31,853 - #18 const
INFO  23:08:31,853 - #50 int
INFO  23:08:31,853 - #50 size
INFO  23:08:31,853 - #11 =
INFO  23:08:31,853 - #47 10
INFO  23:08:31,853 - #12 ;
INFO  23:08:31,853 - #50 Table
INFO  23:08:31,853 - #50 val
INFO  23:08:31,853 - #12 ;
INFO  23:08:31,854 - #3 {
INFO  23:08:31,854 - #10 void
INFO  23:08:31,854 - #50 main
INFO  23:08:31,854 - #5 (
INFO  23:08:31,854 - #6 )
INFO  23:08:31,854 - #50 int
INFO  23:08:31,854 - #50 x
INFO  23:08:31,854 - #27 ,
INFO  23:08:31,854 - #50 s
INFO  23:08:31,854 - #12 ;
INFO  23:08:31,854 - #50 int
INFO  23:08:31,854 - #50 i
INFO  23:08:31,854 - #12 ;
INFO  23:08:31,854 - #3 {
INFO  23:08:31,854 - #50 x
INFO  23:08:31,855 - #19 ++
INFO  23:08:31,855 - #12 ;
INFO  23:08:31,855 - #21 if
INFO  23:08:31,855 - #5 (
INFO  23:08:31,855 - #50 i
INFO  23:08:31,855 - #33 <
INFO  23:08:31,855 - #47 2
INFO  23:08:31,855 - #25 &&
INFO  23:08:31,855 - #50 z
INFO  23:08:31,855 - #30 ==
INFO  23:08:31,855 - #47 0
INFO  23:08:31,855 - #6 )
INFO  23:08:31,855 - #3 {
INFO  23:08:31,855 - #50 a
INFO  23:08:31,855 - #11 =
INFO  23:08:31,855 - #13 new
INFO  23:08:31,856 - #50 Beta
INFO  23:08:31,856 - #12 ;
INFO  23:08:31,856 - #50 a
INFO  23:08:31,856 - #28 .
INFO  23:08:31,856 - #50 x
INFO  23:08:31,856 - #11 =
INFO  23:08:31,856 - #13 new
INFO  23:08:31,856 - #50 int
INFO  23:08:31,856 - #7 [
INFO  23:08:31,856 - #47 5
INFO  23:08:31,856 - #8 ]
INFO  23:08:31,856 - #12 ;
INFO  23:08:31,856 - #50 a
INFO  23:08:31,856 - #28 .
INFO  23:08:31,856 - #50 y
INFO  23:08:31,856 - #11 =
INFO  23:08:31,856 - #13 new
INFO  23:08:31,856 - #50 int
INFO  23:08:31,856 - #7 [
INFO  23:08:31,856 - #47 5
INFO  23:08:31,856 - #8 ]
INFO  23:08:31,856 - #12 ;
INFO  23:08:31,856 - #50 c
INFO  23:08:31,856 - #11 =
INFO  23:08:31,856 - #13 new
INFO  23:08:31,857 - #50 B
INFO  23:08:31,857 - #12 ;
INFO  23:08:31,857 - #50 c
INFO  23:08:31,857 - #28 .
INFO  23:08:31,857 - #50 theA
INFO  23:08:31,857 - #11 =
INFO  23:08:31,857 - #50 a
INFO  23:08:31,857 - #12 ;
INFO  23:08:31,857 - #50 c
INFO  23:08:31,857 - #28 .
INFO  23:08:31,857 - #50 x
INFO  23:08:31,857 - #11 =
INFO  23:08:31,857 - #13 new
INFO  23:08:31,857 - #50 int
INFO  23:08:31,857 - #7 [
INFO  23:08:31,857 - #47 5
INFO  23:08:31,857 - #8 ]
INFO  23:08:31,857 - #12 ;
INFO  23:08:31,857 - #50 x
INFO  23:08:31,857 - #11 =
INFO  23:08:31,857 - #13 new
INFO  23:08:31,857 - #50 int
INFO  23:08:31,857 - #7 [
INFO  23:08:31,857 - #47 3
INFO  23:08:31,857 - #8 ]
INFO  23:08:31,857 - #12 ;
INFO  23:08:31,857 - #50 i
INFO  23:08:31,857 - #11 =
INFO  23:08:31,857 - #47 0
INFO  23:08:31,857 - #12 ;
INFO  23:08:31,858 - #15 read
INFO  23:08:31,858 - #5 (
INFO  23:08:31,858 - #50 c
INFO  23:08:31,858 - #28 .
INFO  23:08:31,858 - #50 i
INFO  23:08:31,858 - #6 )
INFO  23:08:31,858 - #12 ;
INFO  23:08:31,858 - #22 for
INFO  23:08:31,858 - #5 (
INFO  23:08:31,858 - #12 ;
INFO  23:08:31,858 - #50 i
INFO  23:08:31,858 - #33 <
INFO  23:08:31,858 - #47 5
INFO  23:08:31,858 - #12 ;
INFO  23:08:31,858 - #50 i
INFO  23:08:31,858 - #19 ++
INFO  23:08:31,858 - #6 )
INFO  23:08:31,858 - #3 {
INFO  23:08:31,858 - #15 read
INFO  23:08:31,858 - #5 (
INFO  23:08:31,858 - #50 c
INFO  23:08:31,858 - #28 .
INFO  23:08:31,858 - #50 x
INFO  23:08:31,858 - #7 [
INFO  23:08:31,858 - #50 i
INFO  23:08:31,858 - #8 ]
INFO  23:08:31,858 - #6 )
INFO  23:08:31,858 - #12 ;
INFO  23:08:31,858 - #15 read
INFO  23:08:31,858 - #5 (
INFO  23:08:31,858 - #50 c
INFO  23:08:31,858 - #28 .
INFO  23:08:31,859 - #50 theA
INFO  23:08:31,859 - #28 .
INFO  23:08:31,859 - #50 x
INFO  23:08:31,859 - #7 [
INFO  23:08:31,859 - #50 i
INFO  23:08:31,859 - #8 ]
INFO  23:08:31,859 - #6 )
INFO  23:08:31,859 - #12 ;
INFO  23:08:31,859 - #4 }
INFO  23:08:31,859 - #14 print
INFO  23:08:31,859 - #5 (
INFO  23:08:31,859 - #50 c
INFO  23:08:31,859 - #28 .
INFO  23:08:31,859 - #50 getValue
INFO  23:08:31,859 - #5 (
INFO  23:08:31,859 - #50 c
INFO  23:08:31,859 - #28 .
INFO  23:08:31,859 - #50 theA
INFO  23:08:31,859 - #28 .
INFO  23:08:31,859 - #50 x
INFO  23:08:31,859 - #7 [
INFO  23:08:31,859 - #47 0
INFO  23:08:31,859 - #8 ]
INFO  23:08:31,859 - #6 )
INFO  23:08:31,859 - #6 )
INFO  23:08:31,859 - #12 ;
INFO  23:08:31,859 - #50 z
INFO  23:08:31,859 - #19 ++
INFO  23:08:31,859 - #12 ;
INFO  23:08:31,859 - #14 print
INFO  23:08:31,859 - #5 (
INFO  23:08:31,860 - #50 c
INFO  23:08:31,860 - #28 .
INFO  23:08:31,860 - #50 getValue
INFO  23:08:31,860 - #5 (
INFO  23:08:31,860 - #50 c
INFO  23:08:31,860 - #28 .
INFO  23:08:31,860 - #50 theA
INFO  23:08:31,860 - #28 .
INFO  23:08:31,860 - #50 x
INFO  23:08:31,860 - #7 [
INFO  23:08:31,860 - #47 0
INFO  23:08:31,860 - #8 ]
INFO  23:08:31,860 - #6 )
INFO  23:08:31,860 - #6 )
INFO  23:08:31,860 - #12 ;
INFO  23:08:31,860 - #50 z
INFO  23:08:31,860 - #11 =
INFO  23:08:31,860 - #50 z
INFO  23:08:31,860 - #36 +
INFO  23:08:31,860 - #5 (
INFO  23:08:31,860 - #50 i
INFO  23:08:31,860 - #36 +
INFO  23:08:31,860 - #47 2
INFO  23:08:31,860 - #6 )
INFO  23:08:31,860 - #12 ;
INFO  23:08:31,860 - #16 return
INFO  23:08:31,860 - #12 ;
INFO  23:08:31,860 - #4 }
INFO  23:08:31,860 - #46 else
INFO  23:08:31,861 - #3 {
INFO  23:08:31,861 - #21 if
INFO  23:08:31,861 - #5 (
INFO  23:08:31,861 - #50 c
INFO  23:08:31,861 - #32 >
INFO  23:08:31,861 - #47 3
INFO  23:08:31,861 - #6 )
INFO  23:08:31,861 - #29 break
INFO  23:08:31,861 - #12 ;
INFO  23:08:31,861 - #46 else
INFO  23:08:31,861 - #21 if
INFO  23:08:31,861 - #5 (
INFO  23:08:31,861 - #50 c
INFO  23:08:31,861 - #34 >=
INFO  23:08:31,861 - #47 2
INFO  23:08:31,861 - #6 )
INFO  23:08:31,861 - #16 return
INFO  23:08:31,861 - #12 ;
INFO  23:08:31,861 - #46 else
INFO  23:08:31,861 - #24 continue
INFO  23:08:31,861 - #12 ;
INFO  23:08:31,861 - #4 }
INFO  23:08:31,861 - #22 for
INFO  23:08:31,861 - #5 (
INFO  23:08:31,861 - #50 i
INFO  23:08:31,861 - #11 =
INFO  23:08:31,861 - #47 0
INFO  23:08:31,862 - #12 ;
INFO  23:08:31,862 - #50 i
INFO  23:08:31,862 - #33 <
INFO  23:08:31,862 - #47 5
INFO  23:08:31,862 - #12 ;
INFO  23:08:31,862 - #50 i
INFO  23:08:31,862 - #19 ++
INFO  23:08:31,862 - #6 )
INFO  23:08:31,862 - #3 {
INFO  23:08:31,862 - #24 continue
INFO  23:08:31,862 - #12 ;
INFO  23:08:31,862 - #4 }
INFO  23:08:31,862 - #4 }
INFO  23:08:31,862 - #50 int
INFO  23:08:31,862 - #50 main2
INFO  23:08:31,862 - #5 (
INFO  23:08:31,862 - #6 )
INFO  23:08:31,862 - #50 int
INFO  23:08:31,862 - #50 x
INFO  23:08:31,863 - #27 ,
INFO  23:08:31,863 - #50 i
INFO  23:08:31,863 - #12 ;
INFO  23:08:31,863 - #3 {
INFO  23:08:31,863 - #50 val
INFO  23:08:31,863 - #11 =
INFO  23:08:31,863 - #13 new
INFO  23:08:31,863 - #50 Table
INFO  23:08:31,863 - #12 ;
INFO  23:08:31,863 - #50 val
INFO  23:08:31,863 - #28 .
INFO  23:08:31,863 - #50 pos
INFO  23:08:31,863 - #11 =
INFO  23:08:31,863 - #13 new
INFO  23:08:31,863 - #50 int
INFO  23:08:31,863 - #7 [
INFO  23:08:31,863 - #50 size
INFO  23:08:31,863 - #8 ]
INFO  23:08:31,864 - #12 ;
INFO  23:08:31,864 - #50 val
INFO  23:08:31,864 - #28 .
INFO  23:08:31,864 - #50 neg
INFO  23:08:31,864 - #11 =
INFO  23:08:31,864 - #13 new
INFO  23:08:31,864 - #50 int
INFO  23:08:31,864 - #7 [
INFO  23:08:31,864 - #50 size
INFO  23:08:31,864 - #8 ]
INFO  23:08:31,864 - #12 ;
INFO  23:08:31,864 - #22 for
INFO  23:08:31,864 - #5 (
INFO  23:08:31,864 - #50 i
INFO  23:08:31,864 - #11 =
INFO  23:08:31,864 - #47 0
INFO  23:08:31,864 - #12 ;
INFO  23:08:31,864 - #50 i
INFO  23:08:31,865 - #33 <
INFO  23:08:31,865 - #50 size
INFO  23:08:31,865 - #12 ;
INFO  23:08:31,865 - #50 i
INFO  23:08:31,865 - #19 ++
INFO  23:08:31,865 - #6 )
INFO  23:08:31,865 - #3 {
INFO  23:08:31,865 - #50 val
INFO  23:08:31,865 - #28 .
INFO  23:08:31,865 - #50 putp
INFO  23:08:31,865 - #5 (
INFO  23:08:31,865 - #47 0
INFO  23:08:31,865 - #27 ,
INFO  23:08:31,865 - #50 i
INFO  23:08:31,865 - #6 )
INFO  23:08:31,865 - #12 ;
INFO  23:08:31,865 - #50 val
INFO  23:08:31,865 - #28 .
INFO  23:08:31,866 - #50 putn
INFO  23:08:31,866 - #5 (
INFO  23:08:31,866 - #47 0
INFO  23:08:31,866 - #27 ,
INFO  23:08:31,866 - #50 i
INFO  23:08:31,866 - #6 )
INFO  23:08:31,866 - #12 ;
INFO  23:08:31,866 - #4 }
INFO  23:08:31,866 - #15 read
INFO  23:08:31,866 - #5 (
INFO  23:08:31,866 - #50 x
INFO  23:08:31,866 - #6 )
INFO  23:08:31,866 - #12 ;
INFO  23:08:31,866 - #22 for
INFO  23:08:31,866 - #5 (
INFO  23:08:31,866 - #12 ;
INFO  23:08:31,866 - #50 x
INFO  23:08:31,866 - #32 >
INFO  23:08:31,866 - #47 0
INFO  23:08:31,866 - #12 ;
INFO  23:08:31,867 - #6 )
INFO  23:08:31,867 - #3 {
INFO  23:08:31,867 - #21 if
INFO  23:08:31,867 - #5 (
INFO  23:08:31,867 - #47 0
INFO  23:08:31,867 - #35 <=
INFO  23:08:31,867 - #50 x
INFO  23:08:31,867 - #25 &&
INFO  23:08:31,867 - #50 x
INFO  23:08:31,867 - #33 <
INFO  23:08:31,867 - #50 size
INFO  23:08:31,867 - #6 )
INFO  23:08:31,867 - #3 {
INFO  23:08:31,867 - #50 val
INFO  23:08:31,867 - #28 .
INFO  23:08:31,867 - #50 putp
INFO  23:08:31,867 - #5 (
INFO  23:08:31,867 - #50 val
INFO  23:08:31,867 - #28 .
INFO  23:08:31,867 - #50 getp
INFO  23:08:31,867 - #5 (
INFO  23:08:31,867 - #50 x
INFO  23:08:31,868 - #6 )
INFO  23:08:31,868 - #36 +
INFO  23:08:31,868 - #47 1
INFO  23:08:31,868 - #6 )
INFO  23:08:31,868 - #12 ;
INFO  23:08:31,868 - #4 }
INFO  23:08:31,868 - #46 else
INFO  23:08:31,868 - #21 if
INFO  23:08:31,868 - #5 (
INFO  23:08:31,868 - #37 -
INFO  23:08:31,868 - #50 size
INFO  23:08:31,868 - #33 <
INFO  23:08:31,868 - #50 x
INFO  23:08:31,868 - #25 &&
INFO  23:08:31,868 - #50 x
INFO  23:08:31,868 - #33 <
INFO  23:08:31,868 - #47 0
INFO  23:08:31,868 - #6 )
INFO  23:08:31,868 - #3 {
INFO  23:08:31,868 - #50 val
INFO  23:08:31,868 - #28 .
INFO  23:08:31,868 - #50 putn
INFO  23:08:31,869 - #5 (
INFO  23:08:31,869 - #50 val
INFO  23:08:31,869 - #28 .
INFO  23:08:31,869 - #50 getn
INFO  23:08:31,869 - #5 (
INFO  23:08:31,869 - #37 -
INFO  23:08:31,869 - #50 x
INFO  23:08:31,869 - #6 )
INFO  23:08:31,869 - #36 +
INFO  23:08:31,869 - #47 1
INFO  23:08:31,869 - #6 )
INFO  23:08:31,869 - #12 ;
INFO  23:08:31,869 - #4 }
INFO  23:08:31,869 - #15 read
INFO  23:08:31,869 - #5 (
INFO  23:08:31,869 - #50 x
INFO  23:08:31,869 - #6 )
INFO  23:08:31,869 - #12 ;
INFO  23:08:31,869 - #4 }
INFO  23:08:31,869 - #16 return
INFO  23:08:31,869 - #12 ;
INFO  23:08:31,869 - #4 }
INFO  23:08:31,870 - #4 }
INFO  23:08:31,870 - Print calls = 0
