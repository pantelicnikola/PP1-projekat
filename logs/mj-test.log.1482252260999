INFO  14:01:48,996 - Compiling source file: C:\Users\Nikola\Desktop\pp1 Projekat\projekat\workspace\PP1Project\test\program.mj
INFO  14:01:49,003 - #2 program
INFO  14:01:49,003 - #50 myProgram
INFO  14:01:49,003 - #17 class
INFO  14:01:49,003 - #50 Integer
INFO  14:01:49,003 - #3 {
INFO  14:01:49,003 - #50 int
INFO  14:01:49,003 - #50 myInt
INFO  14:01:49,003 - #12 ;
INFO  14:01:49,003 - #3 {
INFO  14:01:49,003 - #10 void
INFO  14:01:49,004 - #50 setInt
INFO  14:01:49,004 - #5 (
INFO  14:01:49,004 - #50 int
INFO  14:01:49,004 - #50 myInt
INFO  14:01:49,004 - #6 )
INFO  14:01:49,004 - #3 {
INFO  14:01:49,004 - #4 }
INFO  14:01:49,004 - #50 int
INFO  14:01:49,004 - #50 getInt
INFO  14:01:49,004 - #5 (
INFO  14:01:49,004 - #6 )
INFO  14:01:49,004 - #3 {
INFO  14:01:49,004 - #16 return
INFO  14:01:49,004 - #50 myInt
INFO  14:01:49,004 - #12 ;
INFO  14:01:49,005 - #4 }
INFO  14:01:49,005 - #4 }
INFO  14:01:49,005 - #4 }
INFO  14:01:49,005 - #17 class
INFO  14:01:49,005 - #50 Table
INFO  14:01:49,005 - #3 {
INFO  14:01:49,005 - #50 int
INFO  14:01:49,005 - #50 pos
INFO  14:01:49,005 - #7 [
INFO  14:01:49,005 - #8 ]
INFO  14:01:49,005 - #27 ,
INFO  14:01:49,005 - #50 neg
INFO  14:01:49,005 - #7 [
INFO  14:01:49,005 - #8 ]
INFO  14:01:49,005 - #12 ;
INFO  14:01:49,005 - #3 {
INFO  14:01:49,005 - #50 int
INFO  14:01:49,006 - #50 putp
INFO  14:01:49,006 - #5 (
INFO  14:01:49,006 - #50 int
INFO  14:01:49,006 - #50 a
INFO  14:01:49,006 - #27 ,
INFO  14:01:49,006 - #50 int
INFO  14:01:49,006 - #50 idx
INFO  14:01:49,006 - #6 )
INFO  14:01:49,006 - #3 {
INFO  14:01:49,006 - #50 this
INFO  14:01:49,006 - #28 .
INFO  14:01:49,006 - #50 pos
INFO  14:01:49,006 - #7 [
INFO  14:01:49,006 - #50 idx
INFO  14:01:49,006 - #8 ]
INFO  14:01:49,006 - #11 =
INFO  14:01:49,006 - #50 a
INFO  14:01:49,006 - #12 ;
INFO  14:01:49,006 - #16 return
INFO  14:01:49,007 - #47 1
INFO  14:01:49,007 - #12 ;
INFO  14:01:49,007 - #4 }
INFO  14:01:49,007 - #50 int
INFO  14:01:49,007 - #50 putn
INFO  14:01:49,007 - #5 (
INFO  14:01:49,007 - #50 int
INFO  14:01:49,007 - #50 a
INFO  14:01:49,007 - #27 ,
INFO  14:01:49,007 - #50 int
INFO  14:01:49,007 - #50 idx
INFO  14:01:49,007 - #6 )
INFO  14:01:49,007 - #3 {
INFO  14:01:49,007 - #50 this
INFO  14:01:49,007 - #28 .
INFO  14:01:49,007 - #50 neg
INFO  14:01:49,007 - #7 [
INFO  14:01:49,007 - #50 idx
INFO  14:01:49,007 - #8 ]
INFO  14:01:49,008 - #11 =
INFO  14:01:49,008 - #50 a
INFO  14:01:49,008 - #12 ;
INFO  14:01:49,008 - #16 return
INFO  14:01:49,008 - #47 1
INFO  14:01:49,008 - #12 ;
INFO  14:01:49,008 - #4 }
INFO  14:01:49,008 - #50 int
INFO  14:01:49,008 - #50 getp
INFO  14:01:49,008 - #5 (
INFO  14:01:49,008 - #50 int
INFO  14:01:49,008 - #50 idx
INFO  14:01:49,008 - #6 )
INFO  14:01:49,008 - #3 {
INFO  14:01:49,008 - #16 return
INFO  14:01:49,008 - #50 pos
INFO  14:01:49,008 - #7 [
INFO  14:01:49,008 - #50 idx
INFO  14:01:49,008 - #8 ]
INFO  14:01:49,009 - #12 ;
INFO  14:01:49,009 - #4 }
INFO  14:01:49,009 - #50 int
INFO  14:01:49,009 - #50 getn
INFO  14:01:49,009 - #5 (
INFO  14:01:49,009 - #50 int
INFO  14:01:49,009 - #50 idx
INFO  14:01:49,009 - #6 )
INFO  14:01:49,009 - #3 {
INFO  14:01:49,009 - #16 return
INFO  14:01:49,009 - #50 neg
INFO  14:01:49,009 - #7 [
INFO  14:01:49,009 - #50 idx
INFO  14:01:49,009 - #8 ]
INFO  14:01:49,009 - #12 ;
INFO  14:01:49,009 - #4 }
INFO  14:01:49,009 - #4 }
INFO  14:01:49,009 - #4 }
INFO  14:01:49,009 - #17 class
INFO  14:01:49,009 - #50 Z
INFO  14:01:49,009 - #23 extends
INFO  14:01:49,010 - #50 Table
INFO  14:01:49,010 - #3 {
INFO  14:01:49,010 - #50 int
INFO  14:01:49,010 - #50 i
INFO  14:01:49,010 - #12 ;
INFO  14:01:49,010 - #50 int
INFO  14:01:49,010 - #50 x
INFO  14:01:49,010 - #7 [
INFO  14:01:49,010 - #8 ]
INFO  14:01:49,010 - #12 ;
INFO  14:01:49,010 - #3 {
INFO  14:01:49,010 - #50 int
INFO  14:01:49,010 - #50 getValue
INFO  14:01:49,010 - #5 (
INFO  14:01:49,011 - #50 int
INFO  14:01:49,011 - #50 a
INFO  14:01:49,011 - #6 )
INFO  14:01:49,011 - #50 int
INFO  14:01:49,011 - #50 b
INFO  14:01:49,011 - #12 ;
INFO  14:01:49,011 - #50 bool
INFO  14:01:49,011 - #50 c
INFO  14:01:49,011 - #12 ;
INFO  14:01:49,011 - #3 {
INFO  14:01:49,011 - #50 x
INFO  14:01:49,012 - #7 [
INFO  14:01:49,012 - #50 i
INFO  14:01:49,012 - #8 ]
INFO  14:01:49,012 - #11 =
INFO  14:01:49,012 - #50 i
INFO  14:01:49,012 - #12 ;
INFO  14:01:49,012 - #16 return
INFO  14:01:49,012 - #50 this
INFO  14:01:49,012 - #28 .
INFO  14:01:49,012 - #50 i
INFO  14:01:49,012 - #36 +
INFO  14:01:49,012 - #50 this
INFO  14:01:49,012 - #28 .
INFO  14:01:49,012 - #50 x
INFO  14:01:49,012 - #7 [
INFO  14:01:49,012 - #47 0
INFO  14:01:49,012 - #8 ]
INFO  14:01:49,012 - #12 ;
INFO  14:01:49,012 - #4 }
INFO  14:01:49,012 - #4 }
INFO  14:01:49,012 - #4 }
INFO  14:01:49,012 - #17 class
INFO  14:01:49,012 - #50 B
INFO  14:01:49,013 - #23 extends
INFO  14:01:49,013 - #50 Table
INFO  14:01:49,013 - #3 {
INFO  14:01:49,013 - #50 int
INFO  14:01:49,013 - #50 i
INFO  14:01:49,013 - #12 ;
INFO  14:01:49,013 - #50 int
INFO  14:01:49,013 - #50 x
INFO  14:01:49,013 - #7 [
INFO  14:01:49,013 - #8 ]
INFO  14:01:49,013 - #12 ;
INFO  14:01:49,013 - #3 {
INFO  14:01:49,013 - #50 int
INFO  14:01:49,013 - #50 getValue
INFO  14:01:49,013 - #5 (
INFO  14:01:49,013 - #50 int
INFO  14:01:49,013 - #50 a
INFO  14:01:49,013 - #6 )
INFO  14:01:49,013 - #50 int
INFO  14:01:49,013 - #50 b
INFO  14:01:49,013 - #12 ;
INFO  14:01:49,013 - #50 bool
INFO  14:01:49,013 - #50 c
INFO  14:01:49,013 - #12 ;
INFO  14:01:49,013 - #3 {
INFO  14:01:49,014 - #14 print
INFO  14:01:49,014 - #5 (
INFO  14:01:49,014 - #50 c
INFO  14:01:49,014 - #28 .
INFO  14:01:49,014 - #50 getValue
INFO  14:01:49,014 - #5 (
INFO  14:01:49,014 - #50 c
INFO  14:01:49,014 - #28 .
INFO  14:01:49,014 - #50 theA
INFO  14:01:49,014 - #28 .
INFO  14:01:49,014 - #50 x
INFO  14:01:49,014 - #7 [
INFO  14:01:49,014 - #47 0
INFO  14:01:49,014 - #8 ]
INFO  14:01:49,014 - #6 )
INFO  14:01:49,014 - #6 )
INFO  14:01:49,014 - #12 ;
INFO  14:01:49,014 - #16 return
INFO  14:01:49,014 - #50 this
INFO  14:01:49,014 - #28 .
INFO  14:01:49,014 - #50 i
INFO  14:01:49,015 - #36 +
INFO  14:01:49,015 - #50 this
INFO  14:01:49,015 - #28 .
INFO  14:01:49,015 - #50 x
INFO  14:01:49,015 - #7 [
INFO  14:01:49,015 - #47 0
INFO  14:01:49,015 - #8 ]
INFO  14:01:49,015 - #36 +
INFO  14:01:49,015 - #50 a
INFO  14:01:49,015 - #12 ;
INFO  14:01:49,015 - #4 }
INFO  14:01:49,015 - #10 void
INFO  14:01:49,015 - #50 getTable
INFO  14:01:49,015 - #5 (
INFO  14:01:49,015 - #6 )
INFO  14:01:49,015 - #50 int
INFO  14:01:49,015 - #50 a
INFO  14:01:49,015 - #12 ;
INFO  14:01:49,015 - #3 {
INFO  14:01:49,015 - #16 return
INFO  14:01:49,015 - #47 1
INFO  14:01:49,015 - #12 ;
INFO  14:01:49,016 - #4 }
INFO  14:01:49,016 - #4 }
INFO  14:01:49,016 - #4 }
INFO  14:01:49,016 - #17 class
INFO  14:01:49,016 - #50 Beta
INFO  14:01:49,016 - #3 {
INFO  14:01:49,016 - #50 int
INFO  14:01:49,016 - #50 a
INFO  14:01:49,016 - #27 ,
INFO  14:01:49,016 - #50 b
INFO  14:01:49,016 - #27 ,
INFO  14:01:49,016 - #50 c
INFO  14:01:49,016 - #27 ,
INFO  14:01:49,016 - #50 d
INFO  14:01:49,016 - #12 ;
INFO  14:01:49,016 - #50 Table
INFO  14:01:49,016 - #50 t
INFO  14:01:49,016 - #12 ;
INFO  14:01:49,017 - #3 {
INFO  14:01:49,017 - #50 int
INFO  14:01:49,017 - #50 getVal
INFO  14:01:49,017 - #5 (
INFO  14:01:49,017 - #6 )
INFO  14:01:49,017 - #3 {
INFO  14:01:49,017 - #16 return
INFO  14:01:49,017 - #12 ;
INFO  14:01:49,017 - #4 }
INFO  14:01:49,017 - #50 int
INFO  14:01:49,017 - #50 aaa
INFO  14:01:49,017 - #5 (
INFO  14:01:49,017 - #50 int
INFO  14:01:49,017 - #50 a
INFO  14:01:49,017 - #6 )
INFO  14:01:49,017 - #3 {
INFO  14:01:49,017 - #16 return
INFO  14:01:49,017 - #12 ;
INFO  14:01:49,017 - #4 }
INFO  14:01:49,017 - #4 }
INFO  14:01:49,018 - #4 }
INFO  14:01:49,018 - #18 const
INFO  14:01:49,018 - #50 int
INFO  14:01:49,018 - #50 a
INFO  14:01:49,018 - #11 =
INFO  14:01:49,018 - #47 23
INFO  14:01:49,018 - #27 ,
INFO  14:01:49,018 - #50 b
INFO  14:01:49,018 - #11 =
INFO  14:01:49,018 - #47 32
INFO  14:01:49,018 - #27 ,
INFO  14:01:49,018 - #50 c
INFO  14:01:49,018 - #11 =
INFO  14:01:49,018 - #48 a
INFO  14:01:49,018 - #12 ;
INFO  14:01:49,018 - #18 const
INFO  14:01:49,018 - #50 bool
INFO  14:01:49,018 - #50 p
INFO  14:01:49,018 - #11 =
INFO  14:01:49,018 - #49 true
INFO  14:01:49,018 - #27 ,
INFO  14:01:49,018 - #50 z
INFO  14:01:49,018 - #11 =
INFO  14:01:49,019 - #49 false
INFO  14:01:49,019 - #27 ,
INFO  14:01:49,019 - #50 g
INFO  14:01:49,019 - #11 =
INFO  14:01:49,019 - #48 a
INFO  14:01:49,019 - #12 ;
INFO  14:01:49,019 - #50 int
INFO  14:01:49,019 - #50 asdv
INFO  14:01:49,019 - #7 [
INFO  14:01:49,019 - #8 ]
INFO  14:01:49,019 - #12 ;
INFO  14:01:49,019 - #50 Table
INFO  14:01:49,019 - #50 aa
INFO  14:01:49,019 - #27 ,
INFO  14:01:49,019 - #50 opa
INFO  14:01:49,019 - #12 ;
INFO  14:01:49,019 - #18 const
INFO  14:01:49,019 - #50 int
INFO  14:01:49,019 - #50 size
INFO  14:01:49,019 - #11 =
INFO  14:01:49,019 - #47 10
INFO  14:01:49,019 - #12 ;
INFO  14:01:49,019 - #50 Table
INFO  14:01:49,019 - #50 val
INFO  14:01:49,019 - #12 ;
INFO  14:01:49,020 - #3 {
INFO  14:01:49,020 - #10 void
INFO  14:01:49,020 - #50 main
INFO  14:01:49,020 - #5 (
INFO  14:01:49,020 - #6 )
INFO  14:01:49,020 - #50 int
INFO  14:01:49,020 - #50 x
INFO  14:01:49,020 - #27 ,
INFO  14:01:49,020 - #50 s
INFO  14:01:49,020 - #12 ;
INFO  14:01:49,020 - #50 int
INFO  14:01:49,020 - #50 i
INFO  14:01:49,020 - #12 ;
INFO  14:01:49,020 - #3 {
INFO  14:01:49,020 - #50 x
INFO  14:01:49,021 - #19 ++
INFO  14:01:49,021 - #12 ;
INFO  14:01:49,021 - #21 if
INFO  14:01:49,021 - #5 (
INFO  14:01:49,021 - #50 i
INFO  14:01:49,021 - #33 <
INFO  14:01:49,022 - #47 2
INFO  14:01:49,022 - #25 &&
INFO  14:01:49,022 - #50 z
INFO  14:01:49,022 - #30 ==
INFO  14:01:49,022 - #47 0
INFO  14:01:49,022 - #6 )
INFO  14:01:49,022 - #3 {
INFO  14:01:49,022 - #50 a
INFO  14:01:49,022 - #11 =
INFO  14:01:49,022 - #13 new
INFO  14:01:49,022 - #50 Beta
INFO  14:01:49,022 - #12 ;
INFO  14:01:49,022 - #50 a
INFO  14:01:49,022 - #28 .
INFO  14:01:49,022 - #50 x
INFO  14:01:49,022 - #11 =
INFO  14:01:49,022 - #13 new
INFO  14:01:49,022 - #50 int
INFO  14:01:49,022 - #7 [
INFO  14:01:49,022 - #47 5
INFO  14:01:49,022 - #8 ]
INFO  14:01:49,022 - #12 ;
INFO  14:01:49,022 - #50 a
INFO  14:01:49,022 - #28 .
INFO  14:01:49,022 - #50 y
INFO  14:01:49,022 - #11 =
INFO  14:01:49,022 - #13 new
INFO  14:01:49,022 - #50 int
INFO  14:01:49,023 - #7 [
INFO  14:01:49,023 - #47 5
INFO  14:01:49,023 - #8 ]
INFO  14:01:49,023 - #12 ;
INFO  14:01:49,023 - #50 c
INFO  14:01:49,023 - #11 =
INFO  14:01:49,023 - #13 new
INFO  14:01:49,023 - #50 B
INFO  14:01:49,023 - #12 ;
INFO  14:01:49,023 - #50 c
INFO  14:01:49,023 - #28 .
INFO  14:01:49,023 - #50 theA
INFO  14:01:49,023 - #11 =
INFO  14:01:49,023 - #50 a
INFO  14:01:49,023 - #12 ;
INFO  14:01:49,023 - #50 c
INFO  14:01:49,023 - #28 .
INFO  14:01:49,023 - #50 x
INFO  14:01:49,023 - #11 =
INFO  14:01:49,023 - #13 new
INFO  14:01:49,023 - #50 int
INFO  14:01:49,023 - #7 [
INFO  14:01:49,024 - #47 5
INFO  14:01:49,024 - #8 ]
INFO  14:01:49,024 - #12 ;
INFO  14:01:49,024 - #50 x
INFO  14:01:49,024 - #11 =
INFO  14:01:49,024 - #13 new
INFO  14:01:49,024 - #50 int
INFO  14:01:49,024 - #7 [
INFO  14:01:49,024 - #47 3
INFO  14:01:49,024 - #8 ]
INFO  14:01:49,024 - #12 ;
INFO  14:01:49,024 - #50 i
INFO  14:01:49,024 - #11 =
INFO  14:01:49,024 - #47 0
INFO  14:01:49,024 - #12 ;
INFO  14:01:49,024 - #15 read
INFO  14:01:49,024 - #5 (
INFO  14:01:49,024 - #50 c
INFO  14:01:49,024 - #28 .
INFO  14:01:49,024 - #50 i
INFO  14:01:49,024 - #6 )
INFO  14:01:49,024 - #12 ;
INFO  14:01:49,024 - #22 for
INFO  14:01:49,024 - #5 (
INFO  14:01:49,024 - #12 ;
INFO  14:01:49,024 - #50 i
INFO  14:01:49,024 - #33 <
INFO  14:01:49,025 - #47 5
INFO  14:01:49,025 - #12 ;
INFO  14:01:49,025 - #50 i
INFO  14:01:49,025 - #19 ++
INFO  14:01:49,025 - #6 )
INFO  14:01:49,025 - #3 {
INFO  14:01:49,025 - #15 read
INFO  14:01:49,025 - #5 (
INFO  14:01:49,025 - #50 c
INFO  14:01:49,025 - #28 .
INFO  14:01:49,025 - #50 x
INFO  14:01:49,025 - #7 [
INFO  14:01:49,025 - #50 i
INFO  14:01:49,025 - #8 ]
INFO  14:01:49,025 - #6 )
INFO  14:01:49,025 - #12 ;
INFO  14:01:49,025 - #15 read
INFO  14:01:49,025 - #5 (
INFO  14:01:49,025 - #50 c
INFO  14:01:49,025 - #28 .
INFO  14:01:49,025 - #50 theA
INFO  14:01:49,025 - #28 .
INFO  14:01:49,025 - #50 x
INFO  14:01:49,025 - #7 [
INFO  14:01:49,025 - #50 i
INFO  14:01:49,025 - #8 ]
INFO  14:01:49,025 - #6 )
INFO  14:01:49,026 - #12 ;
INFO  14:01:49,026 - #4 }
INFO  14:01:49,026 - #14 print
INFO  14:01:49,026 - #5 (
INFO  14:01:49,026 - #50 c
INFO  14:01:49,026 - #28 .
INFO  14:01:49,026 - #50 getValue
INFO  14:01:49,026 - #5 (
INFO  14:01:49,026 - #50 c
INFO  14:01:49,026 - #28 .
INFO  14:01:49,026 - #50 theA
INFO  14:01:49,026 - #28 .
INFO  14:01:49,026 - #50 x
INFO  14:01:49,026 - #7 [
INFO  14:01:49,026 - #47 0
INFO  14:01:49,026 - #8 ]
INFO  14:01:49,026 - #6 )
INFO  14:01:49,026 - #6 )
INFO  14:01:49,026 - #12 ;
INFO  14:01:49,026 - #50 z
INFO  14:01:49,026 - #19 ++
INFO  14:01:49,026 - #12 ;
INFO  14:01:49,026 - #14 print
INFO  14:01:49,027 - #5 (
INFO  14:01:49,027 - #50 c
INFO  14:01:49,027 - #28 .
INFO  14:01:49,027 - #50 getValue
INFO  14:01:49,027 - #5 (
INFO  14:01:49,027 - #50 c
INFO  14:01:49,027 - #28 .
INFO  14:01:49,027 - #50 theA
INFO  14:01:49,027 - #28 .
INFO  14:01:49,027 - #50 x
INFO  14:01:49,027 - #7 [
INFO  14:01:49,027 - #47 0
INFO  14:01:49,027 - #8 ]
INFO  14:01:49,027 - #6 )
INFO  14:01:49,027 - #6 )
INFO  14:01:49,027 - #12 ;
INFO  14:01:49,027 - #50 z
INFO  14:01:49,027 - #11 =
INFO  14:01:49,027 - #50 z
INFO  14:01:49,027 - #36 +
INFO  14:01:49,027 - #5 (
INFO  14:01:49,027 - #50 i
INFO  14:01:49,028 - #36 +
INFO  14:01:49,028 - #47 2
INFO  14:01:49,028 - #6 )
INFO  14:01:49,028 - #12 ;
INFO  14:01:49,028 - #16 return
INFO  14:01:49,028 - #12 ;
INFO  14:01:49,028 - #4 }
INFO  14:01:49,028 - #46 else
INFO  14:01:49,028 - #3 {
INFO  14:01:49,028 - #21 if
INFO  14:01:49,028 - #5 (
INFO  14:01:49,028 - #50 c
INFO  14:01:49,028 - #32 >
INFO  14:01:49,028 - #47 3
INFO  14:01:49,028 - #6 )
INFO  14:01:49,028 - #29 break
INFO  14:01:49,029 - #12 ;
INFO  14:01:49,029 - #46 else
INFO  14:01:49,029 - #21 if
INFO  14:01:49,029 - #5 (
INFO  14:01:49,029 - #50 c
INFO  14:01:49,029 - #34 >=
INFO  14:01:49,029 - #47 2
INFO  14:01:49,029 - #6 )
INFO  14:01:49,029 - #16 return
INFO  14:01:49,029 - #12 ;
INFO  14:01:49,029 - #46 else
INFO  14:01:49,029 - #24 continue
INFO  14:01:49,029 - #12 ;
INFO  14:01:49,029 - #4 }
INFO  14:01:49,029 - #22 for
INFO  14:01:49,029 - #5 (
INFO  14:01:49,029 - #50 i
INFO  14:01:49,029 - #11 =
INFO  14:01:49,030 - #47 0
INFO  14:01:49,030 - #12 ;
INFO  14:01:49,030 - #50 i
INFO  14:01:49,030 - #33 <
INFO  14:01:49,030 - #47 5
INFO  14:01:49,030 - #12 ;
INFO  14:01:49,030 - #50 i
INFO  14:01:49,030 - #19 ++
INFO  14:01:49,030 - #6 )
INFO  14:01:49,030 - #3 {
INFO  14:01:49,030 - #24 continue
INFO  14:01:49,030 - #12 ;
INFO  14:01:49,030 - #4 }
INFO  14:01:49,030 - #4 }
INFO  14:01:49,030 - #50 int
INFO  14:01:49,031 - #50 main2
INFO  14:01:49,031 - #5 (
INFO  14:01:49,031 - #6 )
INFO  14:01:49,031 - #50 int
INFO  14:01:49,031 - #50 x
INFO  14:01:49,031 - #27 ,
INFO  14:01:49,031 - #50 i
INFO  14:01:49,031 - #12 ;
INFO  14:01:49,031 - #3 {
INFO  14:01:49,031 - #50 val
INFO  14:01:49,031 - #11 =
INFO  14:01:49,031 - #13 new
INFO  14:01:49,031 - #50 Table
INFO  14:01:49,031 - #12 ;
INFO  14:01:49,031 - #50 val
INFO  14:01:49,031 - #28 .
INFO  14:01:49,032 - #50 pos
INFO  14:01:49,032 - #11 =
INFO  14:01:49,032 - #13 new
INFO  14:01:49,032 - #50 int
INFO  14:01:49,032 - #7 [
INFO  14:01:49,032 - #50 size
INFO  14:01:49,032 - #8 ]
INFO  14:01:49,032 - #12 ;
INFO  14:01:49,032 - #50 val
INFO  14:01:49,032 - #28 .
INFO  14:01:49,032 - #50 neg
INFO  14:01:49,032 - #11 =
INFO  14:01:49,032 - #13 new
INFO  14:01:49,032 - #50 int
INFO  14:01:49,032 - #7 [
INFO  14:01:49,032 - #50 size
INFO  14:01:49,032 - #8 ]
INFO  14:01:49,033 - #12 ;
INFO  14:01:49,033 - #22 for
INFO  14:01:49,033 - #5 (
INFO  14:01:49,033 - #50 i
INFO  14:01:49,033 - #11 =
INFO  14:01:49,033 - #47 0
INFO  14:01:49,033 - #12 ;
INFO  14:01:49,033 - #50 i
INFO  14:01:49,033 - #33 <
INFO  14:01:49,033 - #50 size
INFO  14:01:49,033 - #12 ;
INFO  14:01:49,033 - #50 i
INFO  14:01:49,033 - #19 ++
INFO  14:01:49,033 - #6 )
INFO  14:01:49,033 - #3 {
INFO  14:01:49,033 - #50 val
INFO  14:01:49,033 - #28 .
INFO  14:01:49,033 - #50 putp
INFO  14:01:49,033 - #5 (
INFO  14:01:49,033 - #47 0
INFO  14:01:49,034 - #27 ,
INFO  14:01:49,034 - #50 i
INFO  14:01:49,034 - #6 )
INFO  14:01:49,034 - #12 ;
INFO  14:01:49,034 - #50 val
INFO  14:01:49,034 - #28 .
INFO  14:01:49,034 - #50 putn
INFO  14:01:49,034 - #5 (
INFO  14:01:49,034 - #47 0
INFO  14:01:49,034 - #27 ,
INFO  14:01:49,034 - #50 i
INFO  14:01:49,034 - #6 )
INFO  14:01:49,034 - #12 ;
INFO  14:01:49,034 - #4 }
INFO  14:01:49,034 - #15 read
INFO  14:01:49,034 - #5 (
INFO  14:01:49,034 - #50 x
INFO  14:01:49,034 - #6 )
INFO  14:01:49,034 - #12 ;
INFO  14:01:49,034 - #22 for
INFO  14:01:49,034 - #5 (
INFO  14:01:49,034 - #12 ;
INFO  14:01:49,034 - #50 x
INFO  14:01:49,035 - #32 >
INFO  14:01:49,035 - #47 0
INFO  14:01:49,035 - #12 ;
INFO  14:01:49,035 - #6 )
INFO  14:01:49,035 - #3 {
INFO  14:01:49,035 - #21 if
INFO  14:01:49,035 - #5 (
INFO  14:01:49,035 - #47 0
INFO  14:01:49,035 - #35 <=
INFO  14:01:49,035 - #50 x
INFO  14:01:49,035 - #25 &&
INFO  14:01:49,035 - #50 x
INFO  14:01:49,035 - #33 <
INFO  14:01:49,035 - #50 size
INFO  14:01:49,035 - #6 )
INFO  14:01:49,035 - #3 {
INFO  14:01:49,035 - #50 val
INFO  14:01:49,035 - #28 .
INFO  14:01:49,035 - #50 putp
INFO  14:01:49,035 - #5 (
INFO  14:01:49,035 - #50 val
INFO  14:01:49,035 - #28 .
INFO  14:01:49,036 - #50 getp
INFO  14:01:49,036 - #5 (
INFO  14:01:49,036 - #50 x
INFO  14:01:49,036 - #6 )
INFO  14:01:49,036 - #36 +
INFO  14:01:49,036 - #47 1
INFO  14:01:49,036 - #6 )
INFO  14:01:49,036 - #12 ;
INFO  14:01:49,036 - #4 }
INFO  14:01:49,036 - #46 else
INFO  14:01:49,036 - #21 if
INFO  14:01:49,036 - #5 (
INFO  14:01:49,036 - #37 -
INFO  14:01:49,036 - #50 size
INFO  14:01:49,036 - #33 <
INFO  14:01:49,036 - #50 x
INFO  14:01:49,036 - #25 &&
INFO  14:01:49,036 - #50 x
INFO  14:01:49,036 - #33 <
INFO  14:01:49,037 - #47 0
INFO  14:01:49,037 - #6 )
INFO  14:01:49,037 - #3 {
INFO  14:01:49,037 - #50 val
INFO  14:01:49,037 - #28 .
INFO  14:01:49,037 - #50 putn
INFO  14:01:49,037 - #5 (
INFO  14:01:49,037 - #50 val
INFO  14:01:49,037 - #28 .
INFO  14:01:49,037 - #50 getn
INFO  14:01:49,037 - #5 (
INFO  14:01:49,037 - #37 -
INFO  14:01:49,037 - #50 x
INFO  14:01:49,037 - #6 )
INFO  14:01:49,037 - #36 +
INFO  14:01:49,037 - #47 1
INFO  14:01:49,037 - #6 )
INFO  14:01:49,037 - #12 ;
INFO  14:01:49,037 - #4 }
INFO  14:01:49,037 - #15 read
INFO  14:01:49,037 - #5 (
INFO  14:01:49,037 - #50 x
INFO  14:01:49,037 - #6 )
INFO  14:01:49,037 - #12 ;
INFO  14:01:49,037 - #4 }
INFO  14:01:49,037 - #16 return
INFO  14:01:49,038 - #12 ;
INFO  14:01:49,038 - #4 }
INFO  14:01:49,038 - #4 }
INFO  14:01:49,038 - Print calls = 3
