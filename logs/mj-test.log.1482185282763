INFO  23:05:55,226 - Compiling source file: C:\Users\Nikola\Desktop\pp1 Projekat\projekat\workspace\PP1Project\test\program.mj
INFO  23:05:55,232 - #2 program
INFO  23:05:55,232 - #50 myProgram
INFO  23:05:55,232 - #17 class
INFO  23:05:55,232 - #50 Integer
INFO  23:05:55,232 - #3 {
INFO  23:05:55,232 - #50 int
INFO  23:05:55,232 - #50 myInt
INFO  23:05:55,232 - #12 ;
INFO  23:05:55,232 - #3 {
INFO  23:05:55,232 - #10 void
INFO  23:05:55,232 - #50 setInt
INFO  23:05:55,233 - #5 (
INFO  23:05:55,233 - #50 int
INFO  23:05:55,233 - #50 myInt
INFO  23:05:55,233 - #6 )
INFO  23:05:55,233 - #3 {
INFO  23:05:55,233 - #4 }
INFO  23:05:55,233 - #50 int
INFO  23:05:55,233 - #50 getInt
INFO  23:05:55,233 - #5 (
INFO  23:05:55,233 - #6 )
INFO  23:05:55,233 - #3 {
INFO  23:05:55,233 - #16 return
INFO  23:05:55,233 - #50 myInt
INFO  23:05:55,233 - #12 ;
INFO  23:05:55,233 - #4 }
INFO  23:05:55,233 - #4 }
INFO  23:05:55,233 - #4 }
INFO  23:05:55,234 - #17 class
INFO  23:05:55,234 - #50 Table
INFO  23:05:55,234 - #3 {
INFO  23:05:55,234 - #50 int
INFO  23:05:55,234 - #50 pos
INFO  23:05:55,234 - #7 [
INFO  23:05:55,234 - #8 ]
INFO  23:05:55,234 - #27 ,
INFO  23:05:55,234 - #50 neg
INFO  23:05:55,234 - #7 [
INFO  23:05:55,234 - #8 ]
INFO  23:05:55,234 - #12 ;
INFO  23:05:55,234 - #3 {
INFO  23:05:55,234 - #50 int
INFO  23:05:55,234 - #50 putp
INFO  23:05:55,234 - #5 (
INFO  23:05:55,234 - #50 int
INFO  23:05:55,234 - #50 a
INFO  23:05:55,234 - #27 ,
INFO  23:05:55,235 - #50 int
INFO  23:05:55,235 - #50 idx
INFO  23:05:55,235 - #6 )
INFO  23:05:55,235 - #3 {
INFO  23:05:55,235 - #50 this
INFO  23:05:55,235 - #28 .
INFO  23:05:55,235 - #50 pos
INFO  23:05:55,235 - #7 [
INFO  23:05:55,235 - #50 idx
INFO  23:05:55,235 - #8 ]
INFO  23:05:55,235 - #11 =
INFO  23:05:55,235 - #50 a
INFO  23:05:55,235 - #12 ;
INFO  23:05:55,235 - #16 return
INFO  23:05:55,235 - #47 1
INFO  23:05:55,235 - #12 ;
INFO  23:05:55,235 - #4 }
INFO  23:05:55,235 - #50 int
INFO  23:05:55,236 - #50 putn
INFO  23:05:55,236 - #5 (
INFO  23:05:55,236 - #50 int
INFO  23:05:55,236 - #50 a
INFO  23:05:55,236 - #27 ,
INFO  23:05:55,236 - #50 int
INFO  23:05:55,236 - #50 idx
INFO  23:05:55,236 - #6 )
INFO  23:05:55,236 - #3 {
INFO  23:05:55,236 - #50 this
INFO  23:05:55,236 - #28 .
INFO  23:05:55,236 - #50 neg
INFO  23:05:55,236 - #7 [
INFO  23:05:55,236 - #50 idx
INFO  23:05:55,236 - #8 ]
INFO  23:05:55,236 - #11 =
INFO  23:05:55,236 - #50 a
INFO  23:05:55,236 - #12 ;
INFO  23:05:55,236 - #16 return
INFO  23:05:55,236 - #47 1
INFO  23:05:55,236 - #12 ;
INFO  23:05:55,237 - #4 }
INFO  23:05:55,237 - #50 int
INFO  23:05:55,237 - #50 getp
INFO  23:05:55,237 - #5 (
INFO  23:05:55,237 - #50 int
INFO  23:05:55,237 - #50 idx
INFO  23:05:55,237 - #6 )
INFO  23:05:55,237 - #3 {
INFO  23:05:55,237 - #16 return
INFO  23:05:55,237 - #50 pos
INFO  23:05:55,237 - #7 [
INFO  23:05:55,237 - #50 idx
INFO  23:05:55,237 - #8 ]
INFO  23:05:55,237 - #12 ;
INFO  23:05:55,237 - #4 }
INFO  23:05:55,237 - #50 int
INFO  23:05:55,237 - #50 getn
INFO  23:05:55,237 - #5 (
INFO  23:05:55,237 - #50 int
INFO  23:05:55,238 - #50 idx
INFO  23:05:55,238 - #6 )
INFO  23:05:55,238 - #3 {
INFO  23:05:55,238 - #16 return
INFO  23:05:55,238 - #50 neg
INFO  23:05:55,238 - #7 [
INFO  23:05:55,238 - #50 idx
INFO  23:05:55,238 - #8 ]
INFO  23:05:55,238 - #12 ;
INFO  23:05:55,238 - #4 }
INFO  23:05:55,238 - #4 }
INFO  23:05:55,238 - #4 }
INFO  23:05:55,238 - #17 class
INFO  23:05:55,238 - #50 Z
INFO  23:05:55,238 - #23 extends
INFO  23:05:55,238 - #50 Table
INFO  23:05:55,238 - #3 {
INFO  23:05:55,238 - #50 int
INFO  23:05:55,238 - #50 i
INFO  23:05:55,238 - #12 ;
INFO  23:05:55,238 - #50 int
INFO  23:05:55,238 - #50 x
INFO  23:05:55,239 - #7 [
INFO  23:05:55,239 - #8 ]
INFO  23:05:55,239 - #12 ;
INFO  23:05:55,239 - #3 {
INFO  23:05:55,239 - #50 int
INFO  23:05:55,239 - #50 getValue
INFO  23:05:55,239 - #5 (
INFO  23:05:55,240 - #50 int
INFO  23:05:55,240 - #50 a
INFO  23:05:55,240 - #6 )
INFO  23:05:55,240 - #50 int
INFO  23:05:55,240 - #50 b
INFO  23:05:55,240 - #12 ;
INFO  23:05:55,240 - #50 bool
INFO  23:05:55,240 - #50 c
INFO  23:05:55,240 - #12 ;
INFO  23:05:55,240 - #3 {
INFO  23:05:55,240 - #50 x
INFO  23:05:55,240 - #7 [
INFO  23:05:55,240 - #50 i
INFO  23:05:55,240 - #8 ]
INFO  23:05:55,240 - #11 =
INFO  23:05:55,240 - #50 i
INFO  23:05:55,240 - #12 ;
INFO  23:05:55,240 - #16 return
INFO  23:05:55,240 - #50 this
INFO  23:05:55,241 - #28 .
INFO  23:05:55,241 - #50 i
INFO  23:05:55,241 - #36 +
INFO  23:05:55,241 - #50 this
INFO  23:05:55,241 - #28 .
INFO  23:05:55,241 - #50 x
INFO  23:05:55,241 - #7 [
INFO  23:05:55,241 - #47 0
INFO  23:05:55,241 - #8 ]
INFO  23:05:55,241 - #12 ;
INFO  23:05:55,241 - #4 }
INFO  23:05:55,241 - #4 }
INFO  23:05:55,241 - #4 }
INFO  23:05:55,241 - #17 class
INFO  23:05:55,241 - #50 B
INFO  23:05:55,241 - #23 extends
INFO  23:05:55,241 - #50 Table
INFO  23:05:55,241 - #3 {
INFO  23:05:55,241 - #50 int
INFO  23:05:55,241 - #50 i
INFO  23:05:55,241 - #12 ;
INFO  23:05:55,241 - #50 int
INFO  23:05:55,241 - #50 x
INFO  23:05:55,241 - #7 [
INFO  23:05:55,241 - #8 ]
INFO  23:05:55,241 - #12 ;
INFO  23:05:55,242 - #3 {
INFO  23:05:55,242 - #50 int
INFO  23:05:55,242 - #50 getValue
INFO  23:05:55,242 - #5 (
INFO  23:05:55,242 - #50 int
INFO  23:05:55,242 - #50 a
INFO  23:05:55,242 - #6 )
INFO  23:05:55,242 - #50 int
INFO  23:05:55,242 - #50 b
INFO  23:05:55,242 - #12 ;
INFO  23:05:55,242 - #50 bool
INFO  23:05:55,242 - #50 c
INFO  23:05:55,242 - #12 ;
INFO  23:05:55,242 - #3 {
INFO  23:05:55,242 - #14 print
INFO  23:05:55,242 - #5 (
INFO  23:05:55,242 - #50 c
INFO  23:05:55,242 - #28 .
INFO  23:05:55,242 - #50 getValue
INFO  23:05:55,242 - #5 (
INFO  23:05:55,242 - #50 c
INFO  23:05:55,242 - #28 .
INFO  23:05:55,242 - #50 theA
INFO  23:05:55,243 - #28 .
INFO  23:05:55,243 - #50 x
INFO  23:05:55,243 - #7 [
INFO  23:05:55,243 - #47 0
INFO  23:05:55,243 - #8 ]
INFO  23:05:55,243 - #6 )
INFO  23:05:55,243 - #6 )
INFO  23:05:55,243 - #12 ;
INFO  23:05:55,243 - #16 return
INFO  23:05:55,243 - #50 this
INFO  23:05:55,243 - #28 .
INFO  23:05:55,243 - #50 i
INFO  23:05:55,243 - #36 +
INFO  23:05:55,243 - #50 this
INFO  23:05:55,243 - #28 .
INFO  23:05:55,243 - #50 x
INFO  23:05:55,243 - #7 [
INFO  23:05:55,243 - #47 0
INFO  23:05:55,243 - #8 ]
INFO  23:05:55,243 - #36 +
INFO  23:05:55,243 - #50 a
INFO  23:05:55,243 - #12 ;
INFO  23:05:55,243 - #4 }
INFO  23:05:55,243 - #10 void
INFO  23:05:55,243 - #50 getTable
INFO  23:05:55,243 - #5 (
INFO  23:05:55,243 - #6 )
INFO  23:05:55,244 - #50 int
INFO  23:05:55,244 - #50 a
INFO  23:05:55,244 - #12 ;
INFO  23:05:55,244 - #3 {
INFO  23:05:55,244 - #16 return
INFO  23:05:55,244 - #47 1
INFO  23:05:55,244 - #12 ;
INFO  23:05:55,244 - #4 }
INFO  23:05:55,244 - #4 }
INFO  23:05:55,244 - #4 }
INFO  23:05:55,244 - #17 class
INFO  23:05:55,244 - #50 Beta
INFO  23:05:55,244 - #3 {
INFO  23:05:55,244 - #50 int
INFO  23:05:55,244 - #50 a
INFO  23:05:55,244 - #27 ,
INFO  23:05:55,244 - #50 b
INFO  23:05:55,244 - #27 ,
INFO  23:05:55,244 - #50 c
INFO  23:05:55,244 - #27 ,
INFO  23:05:55,244 - #50 d
INFO  23:05:55,244 - #12 ;
INFO  23:05:55,244 - #50 Table
INFO  23:05:55,244 - #50 t
INFO  23:05:55,244 - #12 ;
INFO  23:05:55,244 - #3 {
INFO  23:05:55,246 - #50 int
INFO  23:05:55,246 - #50 getVal
INFO  23:05:55,246 - #5 (
INFO  23:05:55,246 - #6 )
INFO  23:05:55,246 - #3 {
INFO  23:05:55,246 - #16 return
INFO  23:05:55,246 - #12 ;
INFO  23:05:55,246 - #4 }
INFO  23:05:55,246 - #50 int
INFO  23:05:55,246 - #50 aaa
INFO  23:05:55,246 - #5 (
INFO  23:05:55,246 - #50 int
INFO  23:05:55,246 - #50 a
INFO  23:05:55,246 - #6 )
INFO  23:05:55,246 - #3 {
INFO  23:05:55,246 - #16 return
INFO  23:05:55,246 - #12 ;
INFO  23:05:55,246 - #4 }
INFO  23:05:55,246 - #4 }
INFO  23:05:55,246 - #4 }
INFO  23:05:55,246 - #18 const
INFO  23:05:55,246 - #50 int
INFO  23:05:55,246 - #50 a
INFO  23:05:55,246 - #11 =
INFO  23:05:55,246 - #47 23
INFO  23:05:55,246 - #27 ,
INFO  23:05:55,246 - #50 b
INFO  23:05:55,246 - #11 =
INFO  23:05:55,247 - #47 32
INFO  23:05:55,247 - #27 ,
INFO  23:05:55,247 - #50 c
INFO  23:05:55,247 - #11 =
INFO  23:05:55,247 - #48 a
INFO  23:05:55,247 - #12 ;
INFO  23:05:55,247 - #18 const
INFO  23:05:55,247 - #50 bool
INFO  23:05:55,247 - #50 p
INFO  23:05:55,247 - #11 =
INFO  23:05:55,247 - #49 true
INFO  23:05:55,247 - #27 ,
INFO  23:05:55,247 - #50 z
INFO  23:05:55,247 - #11 =
INFO  23:05:55,247 - #49 false
INFO  23:05:55,247 - #27 ,
INFO  23:05:55,247 - #50 g
INFO  23:05:55,247 - #11 =
INFO  23:05:55,247 - #48 a
INFO  23:05:55,247 - #12 ;
INFO  23:05:55,247 - #50 int
INFO  23:05:55,247 - #50 asdv
INFO  23:05:55,247 - #7 [
INFO  23:05:55,247 - #8 ]
INFO  23:05:55,247 - #12 ;
INFO  23:05:55,247 - #50 Table
INFO  23:05:55,247 - #50 aa
INFO  23:05:55,247 - #27 ,
INFO  23:05:55,247 - #50 opa
INFO  23:05:55,248 - #12 ;
INFO  23:05:55,248 - #18 const
INFO  23:05:55,248 - #50 int
INFO  23:05:55,248 - #50 size
INFO  23:05:55,248 - #11 =
INFO  23:05:55,248 - #47 10
INFO  23:05:55,248 - #12 ;
INFO  23:05:55,248 - #50 Table
INFO  23:05:55,248 - #50 val
INFO  23:05:55,248 - #12 ;
INFO  23:05:55,248 - #3 {
INFO  23:05:55,248 - #10 void
INFO  23:05:55,248 - #50 main
INFO  23:05:55,248 - #5 (
INFO  23:05:55,248 - #6 )
INFO  23:05:55,248 - #50 int
INFO  23:05:55,248 - #50 x
INFO  23:05:55,248 - #27 ,
INFO  23:05:55,248 - #50 s
INFO  23:05:55,248 - #12 ;
INFO  23:05:55,248 - #50 int
INFO  23:05:55,248 - #50 i
INFO  23:05:55,248 - #12 ;
INFO  23:05:55,248 - #3 {
INFO  23:05:55,248 - #50 x
INFO  23:05:55,248 - #19 ++
INFO  23:05:55,248 - #12 ;
INFO  23:05:55,249 - #21 if
INFO  23:05:55,249 - #5 (
INFO  23:05:55,249 - #50 i
INFO  23:05:55,249 - #33 <
INFO  23:05:55,249 - #47 2
INFO  23:05:55,249 - #25 &&
INFO  23:05:55,249 - #50 z
INFO  23:05:55,249 - #30 ==
INFO  23:05:55,249 - #47 0
INFO  23:05:55,249 - #6 )
INFO  23:05:55,249 - #3 {
INFO  23:05:55,249 - #50 a
INFO  23:05:55,249 - #11 =
INFO  23:05:55,249 - #13 new
INFO  23:05:55,249 - #50 Beta
INFO  23:05:55,249 - #12 ;
INFO  23:05:55,249 - #50 a
INFO  23:05:55,249 - #28 .
INFO  23:05:55,249 - #50 x
INFO  23:05:55,249 - #11 =
INFO  23:05:55,249 - #13 new
INFO  23:05:55,249 - #50 int
INFO  23:05:55,249 - #7 [
INFO  23:05:55,249 - #47 5
INFO  23:05:55,249 - #8 ]
INFO  23:05:55,249 - #12 ;
INFO  23:05:55,249 - #50 a
INFO  23:05:55,249 - #28 .
INFO  23:05:55,250 - #50 y
INFO  23:05:55,250 - #11 =
INFO  23:05:55,250 - #13 new
INFO  23:05:55,250 - #50 int
INFO  23:05:55,250 - #7 [
INFO  23:05:55,250 - #47 5
INFO  23:05:55,250 - #8 ]
INFO  23:05:55,250 - #12 ;
INFO  23:05:55,250 - #50 c
INFO  23:05:55,250 - #11 =
INFO  23:05:55,250 - #13 new
INFO  23:05:55,250 - #50 B
INFO  23:05:55,250 - #12 ;
INFO  23:05:55,250 - #50 c
INFO  23:05:55,250 - #28 .
INFO  23:05:55,250 - #50 theA
INFO  23:05:55,250 - #11 =
INFO  23:05:55,250 - #50 a
INFO  23:05:55,250 - #12 ;
INFO  23:05:55,250 - #50 c
INFO  23:05:55,250 - #28 .
INFO  23:05:55,250 - #50 x
INFO  23:05:55,250 - #11 =
INFO  23:05:55,250 - #13 new
INFO  23:05:55,250 - #50 int
INFO  23:05:55,251 - #7 [
INFO  23:05:55,251 - #47 5
INFO  23:05:55,251 - #8 ]
INFO  23:05:55,251 - #12 ;
INFO  23:05:55,251 - #50 x
INFO  23:05:55,251 - #11 =
INFO  23:05:55,251 - #13 new
INFO  23:05:55,251 - #50 int
INFO  23:05:55,251 - #7 [
INFO  23:05:55,251 - #47 3
INFO  23:05:55,251 - #8 ]
INFO  23:05:55,251 - #12 ;
INFO  23:05:55,251 - #50 i
INFO  23:05:55,251 - #11 =
INFO  23:05:55,251 - #47 0
INFO  23:05:55,251 - #12 ;
INFO  23:05:55,251 - #15 read
INFO  23:05:55,251 - #5 (
INFO  23:05:55,251 - #50 c
INFO  23:05:55,251 - #28 .
INFO  23:05:55,251 - #50 i
INFO  23:05:55,251 - #6 )
INFO  23:05:55,251 - #12 ;
INFO  23:05:55,251 - #22 for
INFO  23:05:55,251 - #5 (
INFO  23:05:55,251 - #12 ;
INFO  23:05:55,251 - #50 i
INFO  23:05:55,251 - #33 <
INFO  23:05:55,251 - #47 5
INFO  23:05:55,251 - #12 ;
INFO  23:05:55,251 - #50 i
INFO  23:05:55,252 - #19 ++
INFO  23:05:55,252 - #6 )
INFO  23:05:55,252 - #3 {
INFO  23:05:55,252 - #15 read
INFO  23:05:55,252 - #5 (
INFO  23:05:55,252 - #50 c
INFO  23:05:55,252 - #28 .
INFO  23:05:55,252 - #50 x
INFO  23:05:55,252 - #7 [
INFO  23:05:55,252 - #50 i
INFO  23:05:55,252 - #8 ]
INFO  23:05:55,252 - #6 )
INFO  23:05:55,252 - #12 ;
INFO  23:05:55,252 - #15 read
INFO  23:05:55,252 - #5 (
INFO  23:05:55,252 - #50 c
INFO  23:05:55,252 - #28 .
INFO  23:05:55,252 - #50 theA
INFO  23:05:55,252 - #28 .
INFO  23:05:55,252 - #50 x
INFO  23:05:55,252 - #7 [
INFO  23:05:55,252 - #50 i
INFO  23:05:55,252 - #8 ]
INFO  23:05:55,252 - #6 )
INFO  23:05:55,252 - #12 ;
INFO  23:05:55,252 - #4 }
INFO  23:05:55,252 - #12 ;
INFO  23:05:55,252 - #14 print
INFO  23:05:55,252 - #5 (
INFO  23:05:55,252 - #50 c
INFO  23:05:55,252 - #28 .
INFO  23:05:55,252 - #50 getValue
INFO  23:05:55,252 - #5 (
INFO  23:05:55,253 - #50 c
INFO  23:05:55,253 - #28 .
INFO  23:05:55,253 - #50 theA
INFO  23:05:55,253 - #28 .
INFO  23:05:55,253 - #50 x
INFO  23:05:55,253 - #7 [
INFO  23:05:55,253 - #47 0
INFO  23:05:55,253 - #8 ]
INFO  23:05:55,253 - #6 )
INFO  23:05:55,253 - #6 )
INFO  23:05:55,253 - #12 ;
INFO  23:05:55,253 - #50 z
INFO  23:05:55,253 - #19 ++
INFO  23:05:55,253 - #12 ;
INFO  23:05:55,253 - #14 print
INFO  23:05:55,253 - #5 (
INFO  23:05:55,253 - #50 c
INFO  23:05:55,253 - #28 .
INFO  23:05:55,253 - #50 getValue
INFO  23:05:55,253 - #5 (
INFO  23:05:55,253 - #50 c
INFO  23:05:55,253 - #28 .
INFO  23:05:55,253 - #50 theA
INFO  23:05:55,253 - #28 .
INFO  23:05:55,253 - #50 x
INFO  23:05:55,253 - #7 [
INFO  23:05:55,253 - #47 0
INFO  23:05:55,253 - #8 ]
INFO  23:05:55,253 - #6 )
INFO  23:05:55,253 - #6 )
INFO  23:05:55,253 - #12 ;
INFO  23:05:55,253 - #50 z
INFO  23:05:55,253 - #11 =
INFO  23:05:55,254 - #50 z
INFO  23:05:55,254 - #36 +
INFO  23:05:55,254 - #5 (
INFO  23:05:55,254 - #50 i
INFO  23:05:55,254 - #36 +
INFO  23:05:55,254 - #47 2
INFO  23:05:55,254 - #6 )
INFO  23:05:55,254 - #12 ;
INFO  23:05:55,254 - #16 return
INFO  23:05:55,254 - #12 ;
INFO  23:05:55,254 - #4 }
INFO  23:05:55,254 - #46 else
INFO  23:05:55,254 - #3 {
INFO  23:05:55,254 - #21 if
INFO  23:05:55,254 - #5 (
INFO  23:05:55,254 - #50 c
INFO  23:05:55,254 - #32 >
INFO  23:05:55,254 - #47 3
INFO  23:05:55,254 - #6 )
INFO  23:05:55,254 - #29 break
INFO  23:05:55,254 - #12 ;
INFO  23:05:55,254 - #46 else
INFO  23:05:55,254 - #21 if
INFO  23:05:55,254 - #5 (
INFO  23:05:55,254 - #50 c
INFO  23:05:55,254 - #34 >=
INFO  23:05:55,254 - #47 2
INFO  23:05:55,254 - #6 )
INFO  23:05:55,254 - #16 return
INFO  23:05:55,255 - #12 ;
INFO  23:05:55,255 - #46 else
INFO  23:05:55,255 - #24 continue
INFO  23:05:55,255 - #12 ;
INFO  23:05:55,255 - #4 }
INFO  23:05:55,255 - #22 for
INFO  23:05:55,255 - #5 (
INFO  23:05:55,255 - #50 i
INFO  23:05:55,255 - #11 =
INFO  23:05:55,255 - #47 0
INFO  23:05:55,255 - #12 ;
INFO  23:05:55,255 - #50 i
INFO  23:05:55,255 - #33 <
INFO  23:05:55,255 - #47 5
INFO  23:05:55,255 - #12 ;
INFO  23:05:55,255 - #50 i
INFO  23:05:55,255 - #19 ++
INFO  23:05:55,255 - #6 )
INFO  23:05:55,255 - #3 {
INFO  23:05:55,255 - #24 continue
INFO  23:05:55,255 - #12 ;
INFO  23:05:55,255 - #4 }
INFO  23:05:55,255 - #4 }
ERROR 23:05:55,255 - 
Sintaksna greska na liniji 140
ERROR 23:05:55,255 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 140
INFO  23:05:55,255 - Print calls = 0
